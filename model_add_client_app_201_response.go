/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the AddClientApp201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddClientApp201Response{}

// AddClientApp201Response struct for AddClientApp201Response
type AddClientApp201Response struct {
	AppId *int32 `json:"app_id,omitempty"`
	ApiAuthId *int32 `json:"api_auth_id,omitempty"`
}

// NewAddClientApp201Response instantiates a new AddClientApp201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddClientApp201Response() *AddClientApp201Response {
	this := AddClientApp201Response{}
	return &this
}

// NewAddClientApp201ResponseWithDefaults instantiates a new AddClientApp201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddClientApp201ResponseWithDefaults() *AddClientApp201Response {
	this := AddClientApp201Response{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *AddClientApp201Response) GetAppId() int32 {
	if o == nil || isNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClientApp201Response) GetAppIdOk() (*int32, bool) {
	if o == nil || isNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *AddClientApp201Response) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *AddClientApp201Response) SetAppId(v int32) {
	o.AppId = &v
}

// GetApiAuthId returns the ApiAuthId field value if set, zero value otherwise.
func (o *AddClientApp201Response) GetApiAuthId() int32 {
	if o == nil || isNil(o.ApiAuthId) {
		var ret int32
		return ret
	}
	return *o.ApiAuthId
}

// GetApiAuthIdOk returns a tuple with the ApiAuthId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddClientApp201Response) GetApiAuthIdOk() (*int32, bool) {
	if o == nil || isNil(o.ApiAuthId) {
		return nil, false
	}
	return o.ApiAuthId, true
}

// HasApiAuthId returns a boolean if a field has been set.
func (o *AddClientApp201Response) HasApiAuthId() bool {
	if o != nil && !isNil(o.ApiAuthId) {
		return true
	}

	return false
}

// SetApiAuthId gets a reference to the given int32 and assigns it to the ApiAuthId field.
func (o *AddClientApp201Response) SetApiAuthId(v int32) {
	o.ApiAuthId = &v
}

func (o AddClientApp201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddClientApp201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !isNil(o.ApiAuthId) {
		toSerialize["api_auth_id"] = o.ApiAuthId
	}
	return toSerialize, nil
}

type NullableAddClientApp201Response struct {
	value *AddClientApp201Response
	isSet bool
}

func (v NullableAddClientApp201Response) Get() *AddClientApp201Response {
	return v.value
}

func (v *NullableAddClientApp201Response) Set(val *AddClientApp201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddClientApp201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddClientApp201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddClientApp201Response(val *AddClientApp201Response) *NullableAddClientApp201Response {
	return &NullableAddClientApp201Response{value: val, isSet: true}
}

func (v NullableAddClientApp201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddClientApp201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


