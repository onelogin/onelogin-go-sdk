/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the AddPrivilegeToRole201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddPrivilegeToRole201Response{}

// AddPrivilegeToRole201Response struct for AddPrivilegeToRole201Response
type AddPrivilegeToRole201Response struct {
	Success *bool `json:"success,omitempty"`
}

// NewAddPrivilegeToRole201Response instantiates a new AddPrivilegeToRole201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPrivilegeToRole201Response() *AddPrivilegeToRole201Response {
	this := AddPrivilegeToRole201Response{}
	return &this
}

// NewAddPrivilegeToRole201ResponseWithDefaults instantiates a new AddPrivilegeToRole201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPrivilegeToRole201ResponseWithDefaults() *AddPrivilegeToRole201Response {
	this := AddPrivilegeToRole201Response{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AddPrivilegeToRole201Response) GetSuccess() bool {
	if o == nil || isNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPrivilegeToRole201Response) GetSuccessOk() (*bool, bool) {
	if o == nil || isNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *AddPrivilegeToRole201Response) HasSuccess() bool {
	if o != nil && !isNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AddPrivilegeToRole201Response) SetSuccess(v bool) {
	o.Success = &v
}

func (o AddPrivilegeToRole201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddPrivilegeToRole201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAddPrivilegeToRole201Response struct {
	value *AddPrivilegeToRole201Response
	isSet bool
}

func (v NullableAddPrivilegeToRole201Response) Get() *AddPrivilegeToRole201Response {
	return v.value
}

func (v *NullableAddPrivilegeToRole201Response) Set(val *AddPrivilegeToRole201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPrivilegeToRole201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPrivilegeToRole201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPrivilegeToRole201Response(val *AddPrivilegeToRole201Response) *NullableAddPrivilegeToRole201Response {
	return &NullableAddPrivilegeToRole201Response{value: val, isSet: true}
}

func (v NullableAddPrivilegeToRole201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPrivilegeToRole201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


