/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the AddPrivilegeToRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddPrivilegeToRoleRequest{}

// AddPrivilegeToRoleRequest struct for AddPrivilegeToRoleRequest
type AddPrivilegeToRoleRequest struct {
	Roles []int32 `json:"roles,omitempty"`
}

// NewAddPrivilegeToRoleRequest instantiates a new AddPrivilegeToRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddPrivilegeToRoleRequest() *AddPrivilegeToRoleRequest {
	this := AddPrivilegeToRoleRequest{}
	return &this
}

// NewAddPrivilegeToRoleRequestWithDefaults instantiates a new AddPrivilegeToRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddPrivilegeToRoleRequestWithDefaults() *AddPrivilegeToRoleRequest {
	this := AddPrivilegeToRoleRequest{}
	return &this
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AddPrivilegeToRoleRequest) GetRoles() []int32 {
	if o == nil || isNil(o.Roles) {
		var ret []int32
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddPrivilegeToRoleRequest) GetRolesOk() ([]int32, bool) {
	if o == nil || isNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AddPrivilegeToRoleRequest) HasRoles() bool {
	if o != nil && !isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []int32 and assigns it to the Roles field.
func (o *AddPrivilegeToRoleRequest) SetRoles(v []int32) {
	o.Roles = v
}

func (o AddPrivilegeToRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddPrivilegeToRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	return toSerialize, nil
}

type NullableAddPrivilegeToRoleRequest struct {
	value *AddPrivilegeToRoleRequest
	isSet bool
}

func (v NullableAddPrivilegeToRoleRequest) Get() *AddPrivilegeToRoleRequest {
	return v.value
}

func (v *NullableAddPrivilegeToRoleRequest) Set(val *AddPrivilegeToRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddPrivilegeToRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddPrivilegeToRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddPrivilegeToRoleRequest(val *AddPrivilegeToRoleRequest) *NullableAddPrivilegeToRoleRequest {
	return &NullableAddPrivilegeToRoleRequest{value: val, isSet: true}
}

func (v NullableAddPrivilegeToRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddPrivilegeToRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


