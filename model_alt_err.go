/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the AltErr type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AltErr{}

// AltErr struct for AltErr
type AltErr struct {
	// HTTP error code https://developer.mozilla.org/en-US/docs/Web/HTTP/Status
	StatusCode *int32 `json:"statusCode,omitempty"`
	// Error Code Name
	Name *string `json:"name,omitempty"`
	// Description of Error
	Message *string `json:"message,omitempty"`
}

// NewAltErr instantiates a new AltErr object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAltErr() *AltErr {
	this := AltErr{}
	return &this
}

// NewAltErrWithDefaults instantiates a new AltErr object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAltErrWithDefaults() *AltErr {
	this := AltErr{}
	return &this
}

// GetStatusCode returns the StatusCode field value if set, zero value otherwise.
func (o *AltErr) GetStatusCode() int32 {
	if o == nil || isNil(o.StatusCode) {
		var ret int32
		return ret
	}
	return *o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AltErr) GetStatusCodeOk() (*int32, bool) {
	if o == nil || isNil(o.StatusCode) {
		return nil, false
	}
	return o.StatusCode, true
}

// HasStatusCode returns a boolean if a field has been set.
func (o *AltErr) HasStatusCode() bool {
	if o != nil && !isNil(o.StatusCode) {
		return true
	}

	return false
}

// SetStatusCode gets a reference to the given int32 and assigns it to the StatusCode field.
func (o *AltErr) SetStatusCode(v int32) {
	o.StatusCode = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AltErr) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AltErr) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AltErr) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AltErr) SetName(v string) {
	o.Name = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AltErr) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AltErr) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AltErr) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *AltErr) SetMessage(v string) {
	o.Message = &v
}

func (o AltErr) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AltErr) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StatusCode) {
		toSerialize["statusCode"] = o.StatusCode
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableAltErr struct {
	value *AltErr
	isSet bool
}

func (v NullableAltErr) Get() *AltErr {
	return v.value
}

func (v *NullableAltErr) Set(val *AltErr) {
	v.value = val
	v.isSet = true
}

func (v NullableAltErr) IsSet() bool {
	return v.isSet
}

func (v *NullableAltErr) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAltErr(val *AltErr) *NullableAltErr {
	return &NullableAltErr{value: val, isSet: true}
}

func (v NullableAltErr) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAltErr) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


