/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the BrandBackground type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BrandBackground{}

// BrandBackground struct for BrandBackground
type BrandBackground struct {
	Urls BrandBackgroundUrls `json:"urls"`
	FileSize int32 `json:"file_size"`
	UpdatedAt string `json:"updated_at"`
	ContentType string `json:"content_type"`
}

// NewBrandBackground instantiates a new BrandBackground object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBrandBackground(urls BrandBackgroundUrls, fileSize int32, updatedAt string, contentType string) *BrandBackground {
	this := BrandBackground{}
	this.Urls = urls
	this.FileSize = fileSize
	this.UpdatedAt = updatedAt
	this.ContentType = contentType
	return &this
}

// NewBrandBackgroundWithDefaults instantiates a new BrandBackground object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBrandBackgroundWithDefaults() *BrandBackground {
	this := BrandBackground{}
	return &this
}

// GetUrls returns the Urls field value
func (o *BrandBackground) GetUrls() BrandBackgroundUrls {
	if o == nil {
		var ret BrandBackgroundUrls
		return ret
	}

	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value
// and a boolean to check if the value has been set.
func (o *BrandBackground) GetUrlsOk() (*BrandBackgroundUrls, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Urls, true
}

// SetUrls sets field value
func (o *BrandBackground) SetUrls(v BrandBackgroundUrls) {
	o.Urls = v
}

// GetFileSize returns the FileSize field value
func (o *BrandBackground) GetFileSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value
// and a boolean to check if the value has been set.
func (o *BrandBackground) GetFileSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileSize, true
}

// SetFileSize sets field value
func (o *BrandBackground) SetFileSize(v int32) {
	o.FileSize = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *BrandBackground) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *BrandBackground) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *BrandBackground) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetContentType returns the ContentType field value
func (o *BrandBackground) GetContentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value
// and a boolean to check if the value has been set.
func (o *BrandBackground) GetContentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentType, true
}

// SetContentType sets field value
func (o *BrandBackground) SetContentType(v string) {
	o.ContentType = v
}

func (o BrandBackground) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BrandBackground) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["urls"] = o.Urls
	toSerialize["file_size"] = o.FileSize
	toSerialize["updated_at"] = o.UpdatedAt
	toSerialize["content_type"] = o.ContentType
	return toSerialize, nil
}

type NullableBrandBackground struct {
	value *BrandBackground
	isSet bool
}

func (v NullableBrandBackground) Get() *BrandBackground {
	return v.value
}

func (v *NullableBrandBackground) Set(val *BrandBackground) {
	v.value = val
	v.isSet = true
}

func (v NullableBrandBackground) IsSet() bool {
	return v.isSet
}

func (v *NullableBrandBackground) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBrandBackground(val *BrandBackground) *NullableBrandBackground {
	return &NullableBrandBackground{value: val, isSet: true}
}

func (v NullableBrandBackground) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBrandBackground) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


