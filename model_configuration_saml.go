/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the ConfigurationSaml type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationSaml{}

// ConfigurationSaml struct for ConfigurationSaml
type ConfigurationSaml struct {
	// One of the following:   - SHA-1   - SHA-256   - SHA-348   - SHA-512
	SignatureAlgorithm string `json:"signature_algorithm"`
	// When creating apps the default certificate will be used unless the `certificate_id` attribute is applied in the `configuration` object.
	CertificateId int32 `json:"certificate_id"`
}

// NewConfigurationSaml instantiates a new ConfigurationSaml object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationSaml(signatureAlgorithm string, certificateId int32) *ConfigurationSaml {
	this := ConfigurationSaml{}
	this.SignatureAlgorithm = signatureAlgorithm
	this.CertificateId = certificateId
	return &this
}

// NewConfigurationSamlWithDefaults instantiates a new ConfigurationSaml object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationSamlWithDefaults() *ConfigurationSaml {
	this := ConfigurationSaml{}
	return &this
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value
func (o *ConfigurationSaml) GetSignatureAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value
// and a boolean to check if the value has been set.
func (o *ConfigurationSaml) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignatureAlgorithm, true
}

// SetSignatureAlgorithm sets field value
func (o *ConfigurationSaml) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = v
}

// GetCertificateId returns the CertificateId field value
func (o *ConfigurationSaml) GetCertificateId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value
// and a boolean to check if the value has been set.
func (o *ConfigurationSaml) GetCertificateIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CertificateId, true
}

// SetCertificateId sets field value
func (o *ConfigurationSaml) SetCertificateId(v int32) {
	o.CertificateId = v
}

func (o ConfigurationSaml) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationSaml) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signature_algorithm"] = o.SignatureAlgorithm
	toSerialize["certificate_id"] = o.CertificateId
	return toSerialize, nil
}

type NullableConfigurationSaml struct {
	value *ConfigurationSaml
	isSet bool
}

func (v NullableConfigurationSaml) Get() *ConfigurationSaml {
	return v.value
}

func (v *NullableConfigurationSaml) Set(val *ConfigurationSaml) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationSaml) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationSaml) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationSaml(val *ConfigurationSaml) *NullableConfigurationSaml {
	return &NullableConfigurationSaml{value: val, isSet: true}
}

func (v NullableConfigurationSaml) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationSaml) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


