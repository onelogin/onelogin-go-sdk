/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the CreateDeviceVerification201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceVerification201Response{}

// CreateDeviceVerification201Response struct for CreateDeviceVerification201Response
type CreateDeviceVerification201Response struct {
	// Specifies the factor to be verified.
	DeviceId *int32 `json:"device_id,omitempty"`
	// A name for the users device
	DisplayName *string `json:"display_name,omitempty"`
	// A short lived token that is required to Verify the Factor. This token expires based on the expires_in parameter passed in.
	ExpiresAt *string `json:"expires_at,omitempty"`
	// Only applies to Email MagicLink factor. Redirects MagicLink success page to specified URL after 2 seconds. Email must already be configured by the user.
	RedirectTo *string `json:"redirect_to,omitempty"`
	// Authentication factor display name assigned by users when they register the device.
	UserDisplayName *string `json:"user_display_name,omitempty"`
	// Registration identifier.
	Id *string `json:"id,omitempty"`
	// Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
	TypeDisplayName *string `json:"type_display_name,omitempty"`
	// Authentication factor name, as it appears to administrators in OneLogin.
	AuthFactorName *string `json:"auth_factor_name,omitempty"`
}

// NewCreateDeviceVerification201Response instantiates a new CreateDeviceVerification201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceVerification201Response() *CreateDeviceVerification201Response {
	this := CreateDeviceVerification201Response{}
	return &this
}

// NewCreateDeviceVerification201ResponseWithDefaults instantiates a new CreateDeviceVerification201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceVerification201ResponseWithDefaults() *CreateDeviceVerification201Response {
	this := CreateDeviceVerification201Response{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetDeviceId() int32 {
	if o == nil || isNil(o.DeviceId) {
		var ret int32
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetDeviceIdOk() (*int32, bool) {
	if o == nil || isNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasDeviceId() bool {
	if o != nil && !isNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int32 and assigns it to the DeviceId field.
func (o *CreateDeviceVerification201Response) SetDeviceId(v int32) {
	o.DeviceId = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CreateDeviceVerification201Response) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetExpiresAt() string {
	if o == nil || isNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetExpiresAtOk() (*string, bool) {
	if o == nil || isNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasExpiresAt() bool {
	if o != nil && !isNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *CreateDeviceVerification201Response) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetRedirectTo returns the RedirectTo field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetRedirectTo() string {
	if o == nil || isNil(o.RedirectTo) {
		var ret string
		return ret
	}
	return *o.RedirectTo
}

// GetRedirectToOk returns a tuple with the RedirectTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetRedirectToOk() (*string, bool) {
	if o == nil || isNil(o.RedirectTo) {
		return nil, false
	}
	return o.RedirectTo, true
}

// HasRedirectTo returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasRedirectTo() bool {
	if o != nil && !isNil(o.RedirectTo) {
		return true
	}

	return false
}

// SetRedirectTo gets a reference to the given string and assigns it to the RedirectTo field.
func (o *CreateDeviceVerification201Response) SetRedirectTo(v string) {
	o.RedirectTo = &v
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetUserDisplayName() string {
	if o == nil || isNil(o.UserDisplayName) {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetUserDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.UserDisplayName) {
		return nil, false
	}
	return o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasUserDisplayName() bool {
	if o != nil && !isNil(o.UserDisplayName) {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *CreateDeviceVerification201Response) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateDeviceVerification201Response) SetId(v string) {
	o.Id = &v
}

// GetTypeDisplayName returns the TypeDisplayName field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetTypeDisplayName() string {
	if o == nil || isNil(o.TypeDisplayName) {
		var ret string
		return ret
	}
	return *o.TypeDisplayName
}

// GetTypeDisplayNameOk returns a tuple with the TypeDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetTypeDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.TypeDisplayName) {
		return nil, false
	}
	return o.TypeDisplayName, true
}

// HasTypeDisplayName returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasTypeDisplayName() bool {
	if o != nil && !isNil(o.TypeDisplayName) {
		return true
	}

	return false
}

// SetTypeDisplayName gets a reference to the given string and assigns it to the TypeDisplayName field.
func (o *CreateDeviceVerification201Response) SetTypeDisplayName(v string) {
	o.TypeDisplayName = &v
}

// GetAuthFactorName returns the AuthFactorName field value if set, zero value otherwise.
func (o *CreateDeviceVerification201Response) GetAuthFactorName() string {
	if o == nil || isNil(o.AuthFactorName) {
		var ret string
		return ret
	}
	return *o.AuthFactorName
}

// GetAuthFactorNameOk returns a tuple with the AuthFactorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerification201Response) GetAuthFactorNameOk() (*string, bool) {
	if o == nil || isNil(o.AuthFactorName) {
		return nil, false
	}
	return o.AuthFactorName, true
}

// HasAuthFactorName returns a boolean if a field has been set.
func (o *CreateDeviceVerification201Response) HasAuthFactorName() bool {
	if o != nil && !isNil(o.AuthFactorName) {
		return true
	}

	return false
}

// SetAuthFactorName gets a reference to the given string and assigns it to the AuthFactorName field.
func (o *CreateDeviceVerification201Response) SetAuthFactorName(v string) {
	o.AuthFactorName = &v
}

func (o CreateDeviceVerification201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceVerification201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !isNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !isNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !isNil(o.RedirectTo) {
		toSerialize["redirect_to"] = o.RedirectTo
	}
	if !isNil(o.UserDisplayName) {
		toSerialize["user_display_name"] = o.UserDisplayName
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.TypeDisplayName) {
		toSerialize["type_display_name"] = o.TypeDisplayName
	}
	if !isNil(o.AuthFactorName) {
		toSerialize["auth_factor_name"] = o.AuthFactorName
	}
	return toSerialize, nil
}

type NullableCreateDeviceVerification201Response struct {
	value *CreateDeviceVerification201Response
	isSet bool
}

func (v NullableCreateDeviceVerification201Response) Get() *CreateDeviceVerification201Response {
	return v.value
}

func (v *NullableCreateDeviceVerification201Response) Set(val *CreateDeviceVerification201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceVerification201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceVerification201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceVerification201Response(val *CreateDeviceVerification201Response) *NullableCreateDeviceVerification201Response {
	return &NullableCreateDeviceVerification201Response{value: val, isSet: true}
}

func (v NullableCreateDeviceVerification201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceVerification201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


