/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the CreateDeviceVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDeviceVerificationRequest{}

// CreateDeviceVerificationRequest struct for CreateDeviceVerificationRequest
type CreateDeviceVerificationRequest struct {
	// Specifies the factor to be verified.
	DeviceId int32 `json:"device_id"`
	// A name for the users device
	DisplayName *string `json:"display_name,omitempty"`
	// Defaults to 120. Valid values are: 120-900 seconds.
	ExpiresIn *string `json:"expires_in,omitempty"`
	// Only applies to Email MagicLink factor. Redirects MagicLink success page to specified URL after 2 seconds. Email must already be configured by the user.
	RedirectTo *string `json:"redirect_to,omitempty"`
	// Only applies to SMS factor. A message template that will be sent via SMS. Max length of the message after template items are inserted is 160 characters including the OTP code. SMS must already be configured by the user. The following template variables can be included in the message. - {{otp_code}} - The security code. - {{otp_expiry}} - The number of minutes until the one time code expires.
	CustomMessage *string `json:"custom_message,omitempty"`
}

// NewCreateDeviceVerificationRequest instantiates a new CreateDeviceVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceVerificationRequest(deviceId int32) *CreateDeviceVerificationRequest {
	this := CreateDeviceVerificationRequest{}
	this.DeviceId = deviceId
	return &this
}

// NewCreateDeviceVerificationRequestWithDefaults instantiates a new CreateDeviceVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceVerificationRequestWithDefaults() *CreateDeviceVerificationRequest {
	this := CreateDeviceVerificationRequest{}
	return &this
}

// GetDeviceId returns the DeviceId field value
func (o *CreateDeviceVerificationRequest) GetDeviceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerificationRequest) GetDeviceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *CreateDeviceVerificationRequest) SetDeviceId(v int32) {
	o.DeviceId = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CreateDeviceVerificationRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerificationRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CreateDeviceVerificationRequest) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CreateDeviceVerificationRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *CreateDeviceVerificationRequest) GetExpiresIn() string {
	if o == nil || isNil(o.ExpiresIn) {
		var ret string
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerificationRequest) GetExpiresInOk() (*string, bool) {
	if o == nil || isNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *CreateDeviceVerificationRequest) HasExpiresIn() bool {
	if o != nil && !isNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given string and assigns it to the ExpiresIn field.
func (o *CreateDeviceVerificationRequest) SetExpiresIn(v string) {
	o.ExpiresIn = &v
}

// GetRedirectTo returns the RedirectTo field value if set, zero value otherwise.
func (o *CreateDeviceVerificationRequest) GetRedirectTo() string {
	if o == nil || isNil(o.RedirectTo) {
		var ret string
		return ret
	}
	return *o.RedirectTo
}

// GetRedirectToOk returns a tuple with the RedirectTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerificationRequest) GetRedirectToOk() (*string, bool) {
	if o == nil || isNil(o.RedirectTo) {
		return nil, false
	}
	return o.RedirectTo, true
}

// HasRedirectTo returns a boolean if a field has been set.
func (o *CreateDeviceVerificationRequest) HasRedirectTo() bool {
	if o != nil && !isNil(o.RedirectTo) {
		return true
	}

	return false
}

// SetRedirectTo gets a reference to the given string and assigns it to the RedirectTo field.
func (o *CreateDeviceVerificationRequest) SetRedirectTo(v string) {
	o.RedirectTo = &v
}

// GetCustomMessage returns the CustomMessage field value if set, zero value otherwise.
func (o *CreateDeviceVerificationRequest) GetCustomMessage() string {
	if o == nil || isNil(o.CustomMessage) {
		var ret string
		return ret
	}
	return *o.CustomMessage
}

// GetCustomMessageOk returns a tuple with the CustomMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceVerificationRequest) GetCustomMessageOk() (*string, bool) {
	if o == nil || isNil(o.CustomMessage) {
		return nil, false
	}
	return o.CustomMessage, true
}

// HasCustomMessage returns a boolean if a field has been set.
func (o *CreateDeviceVerificationRequest) HasCustomMessage() bool {
	if o != nil && !isNil(o.CustomMessage) {
		return true
	}

	return false
}

// SetCustomMessage gets a reference to the given string and assigns it to the CustomMessage field.
func (o *CreateDeviceVerificationRequest) SetCustomMessage(v string) {
	o.CustomMessage = &v
}

func (o CreateDeviceVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDeviceVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["device_id"] = o.DeviceId
	if !isNil(o.DisplayName) {
		toSerialize["display_name"] = o.DisplayName
	}
	if !isNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if !isNil(o.RedirectTo) {
		toSerialize["redirect_to"] = o.RedirectTo
	}
	if !isNil(o.CustomMessage) {
		toSerialize["custom_message"] = o.CustomMessage
	}
	return toSerialize, nil
}

type NullableCreateDeviceVerificationRequest struct {
	value *CreateDeviceVerificationRequest
	isSet bool
}

func (v NullableCreateDeviceVerificationRequest) Get() *CreateDeviceVerificationRequest {
	return v.value
}

func (v *NullableCreateDeviceVerificationRequest) Set(val *CreateDeviceVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceVerificationRequest(val *CreateDeviceVerificationRequest) *NullableCreateDeviceVerificationRequest {
	return &NullableCreateDeviceVerificationRequest{value: val, isSet: true}
}

func (v NullableCreateDeviceVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


