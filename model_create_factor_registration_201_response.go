/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the CreateFactorRegistration201Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFactorRegistration201Response{}

// CreateFactorRegistration201Response struct for CreateFactorRegistration201Response
type CreateFactorRegistration201Response struct {
	// MFA device identifier.
	DeviceId *string `json:"device_id,omitempty"`
	// Authentication factor display name assigned by users when they register the device.
	UserDisplayName *string `json:"user_display_name,omitempty"`
	// Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
	TypeDisplayName *string `json:"type_display_name,omitempty"`
	// Authentication factor name, as it appears to administrators in OneLogin.
	AuthFactorName *string `json:"auth_factor_name,omitempty"`
	// Verification identifier used in subsequent verification step.
	Id *string `json:"id,omitempty"`
	// User identifier
	UserId *string `json:"user_id,omitempty"`
}

// NewCreateFactorRegistration201Response instantiates a new CreateFactorRegistration201Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFactorRegistration201Response() *CreateFactorRegistration201Response {
	this := CreateFactorRegistration201Response{}
	return &this
}

// NewCreateFactorRegistration201ResponseWithDefaults instantiates a new CreateFactorRegistration201Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFactorRegistration201ResponseWithDefaults() *CreateFactorRegistration201Response {
	this := CreateFactorRegistration201Response{}
	return &this
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *CreateFactorRegistration201Response) GetDeviceId() string {
	if o == nil || isNil(o.DeviceId) {
		var ret string
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistration201Response) GetDeviceIdOk() (*string, bool) {
	if o == nil || isNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *CreateFactorRegistration201Response) HasDeviceId() bool {
	if o != nil && !isNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given string and assigns it to the DeviceId field.
func (o *CreateFactorRegistration201Response) SetDeviceId(v string) {
	o.DeviceId = &v
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise.
func (o *CreateFactorRegistration201Response) GetUserDisplayName() string {
	if o == nil || isNil(o.UserDisplayName) {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistration201Response) GetUserDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.UserDisplayName) {
		return nil, false
	}
	return o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *CreateFactorRegistration201Response) HasUserDisplayName() bool {
	if o != nil && !isNil(o.UserDisplayName) {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *CreateFactorRegistration201Response) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// GetTypeDisplayName returns the TypeDisplayName field value if set, zero value otherwise.
func (o *CreateFactorRegistration201Response) GetTypeDisplayName() string {
	if o == nil || isNil(o.TypeDisplayName) {
		var ret string
		return ret
	}
	return *o.TypeDisplayName
}

// GetTypeDisplayNameOk returns a tuple with the TypeDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistration201Response) GetTypeDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.TypeDisplayName) {
		return nil, false
	}
	return o.TypeDisplayName, true
}

// HasTypeDisplayName returns a boolean if a field has been set.
func (o *CreateFactorRegistration201Response) HasTypeDisplayName() bool {
	if o != nil && !isNil(o.TypeDisplayName) {
		return true
	}

	return false
}

// SetTypeDisplayName gets a reference to the given string and assigns it to the TypeDisplayName field.
func (o *CreateFactorRegistration201Response) SetTypeDisplayName(v string) {
	o.TypeDisplayName = &v
}

// GetAuthFactorName returns the AuthFactorName field value if set, zero value otherwise.
func (o *CreateFactorRegistration201Response) GetAuthFactorName() string {
	if o == nil || isNil(o.AuthFactorName) {
		var ret string
		return ret
	}
	return *o.AuthFactorName
}

// GetAuthFactorNameOk returns a tuple with the AuthFactorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistration201Response) GetAuthFactorNameOk() (*string, bool) {
	if o == nil || isNil(o.AuthFactorName) {
		return nil, false
	}
	return o.AuthFactorName, true
}

// HasAuthFactorName returns a boolean if a field has been set.
func (o *CreateFactorRegistration201Response) HasAuthFactorName() bool {
	if o != nil && !isNil(o.AuthFactorName) {
		return true
	}

	return false
}

// SetAuthFactorName gets a reference to the given string and assigns it to the AuthFactorName field.
func (o *CreateFactorRegistration201Response) SetAuthFactorName(v string) {
	o.AuthFactorName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CreateFactorRegistration201Response) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistration201Response) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CreateFactorRegistration201Response) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CreateFactorRegistration201Response) SetId(v string) {
	o.Id = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *CreateFactorRegistration201Response) GetUserId() string {
	if o == nil || isNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistration201Response) GetUserIdOk() (*string, bool) {
	if o == nil || isNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *CreateFactorRegistration201Response) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *CreateFactorRegistration201Response) SetUserId(v string) {
	o.UserId = &v
}

func (o CreateFactorRegistration201Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFactorRegistration201Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	if !isNil(o.UserDisplayName) {
		toSerialize["user_display_name"] = o.UserDisplayName
	}
	if !isNil(o.TypeDisplayName) {
		toSerialize["type_display_name"] = o.TypeDisplayName
	}
	if !isNil(o.AuthFactorName) {
		toSerialize["auth_factor_name"] = o.AuthFactorName
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableCreateFactorRegistration201Response struct {
	value *CreateFactorRegistration201Response
	isSet bool
}

func (v NullableCreateFactorRegistration201Response) Get() *CreateFactorRegistration201Response {
	return v.value
}

func (v *NullableCreateFactorRegistration201Response) Set(val *CreateFactorRegistration201Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFactorRegistration201Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFactorRegistration201Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFactorRegistration201Response(val *CreateFactorRegistration201Response) *NullableCreateFactorRegistration201Response {
	return &NullableCreateFactorRegistration201Response{value: val, isSet: true}
}

func (v NullableCreateFactorRegistration201Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFactorRegistration201Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


