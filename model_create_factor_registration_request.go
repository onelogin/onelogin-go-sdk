/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the CreateFactorRegistrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFactorRegistrationRequest{}

// CreateFactorRegistrationRequest struct for CreateFactorRegistrationRequest
type CreateFactorRegistrationRequest struct {
	// The identifier of the factor to enroll the user with. See Get Available Factors for a list of possible id values.
	FactorId int32 `json:"factor_id"`
	// A name for the users device
	DisplayName string `json:"display_name"`
	// Defaults to 120. Valid values are: 120-900 seconds.
	ExpiresIn *string `json:"expires_in,omitempty"`
	// Defaults to false. The following factors support verified = true as part of the initial registration request: OneLogin SMS, OneLogin Voice, OneLogin Email. When using verified = true it is critical that the supported factors have pre-verified values, most likely imported from an existing directory or by the users themselvdes. Factors such as Authenticator and OneLogin Protect do not support verification = true as the user interaction is required to verify the factor.
	Verified *bool `json:"verified,omitempty"`
	// Only applies to Email MagicLink factor. Redirects MagicLink success page to specified URL after 2 seconds. Email must already be configured by the user.
	RedirectTo *string `json:"redirect_to,omitempty"`
	// Only applies to SMS factor. A message template that will be sent via SMS. Max length of the message after template items are inserted is 160 characters including the OTP code. SMS must already be configured by the user. The following template variables can be included in the message. - {{otp_code}} - The security code. - {{otp_expiry}} - The number of minutes until the one time code expires.
	CustomMessage *string `json:"custom_message,omitempty"`
}

// NewCreateFactorRegistrationRequest instantiates a new CreateFactorRegistrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFactorRegistrationRequest(factorId int32, displayName string) *CreateFactorRegistrationRequest {
	this := CreateFactorRegistrationRequest{}
	this.FactorId = factorId
	this.DisplayName = displayName
	return &this
}

// NewCreateFactorRegistrationRequestWithDefaults instantiates a new CreateFactorRegistrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFactorRegistrationRequestWithDefaults() *CreateFactorRegistrationRequest {
	this := CreateFactorRegistrationRequest{}
	return &this
}

// GetFactorId returns the FactorId field value
func (o *CreateFactorRegistrationRequest) GetFactorId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FactorId
}

// GetFactorIdOk returns a tuple with the FactorId field value
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistrationRequest) GetFactorIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FactorId, true
}

// SetFactorId sets field value
func (o *CreateFactorRegistrationRequest) SetFactorId(v int32) {
	o.FactorId = v
}

// GetDisplayName returns the DisplayName field value
func (o *CreateFactorRegistrationRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistrationRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *CreateFactorRegistrationRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *CreateFactorRegistrationRequest) GetExpiresIn() string {
	if o == nil || isNil(o.ExpiresIn) {
		var ret string
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistrationRequest) GetExpiresInOk() (*string, bool) {
	if o == nil || isNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *CreateFactorRegistrationRequest) HasExpiresIn() bool {
	if o != nil && !isNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given string and assigns it to the ExpiresIn field.
func (o *CreateFactorRegistrationRequest) SetExpiresIn(v string) {
	o.ExpiresIn = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *CreateFactorRegistrationRequest) GetVerified() bool {
	if o == nil || isNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistrationRequest) GetVerifiedOk() (*bool, bool) {
	if o == nil || isNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *CreateFactorRegistrationRequest) HasVerified() bool {
	if o != nil && !isNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *CreateFactorRegistrationRequest) SetVerified(v bool) {
	o.Verified = &v
}

// GetRedirectTo returns the RedirectTo field value if set, zero value otherwise.
func (o *CreateFactorRegistrationRequest) GetRedirectTo() string {
	if o == nil || isNil(o.RedirectTo) {
		var ret string
		return ret
	}
	return *o.RedirectTo
}

// GetRedirectToOk returns a tuple with the RedirectTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistrationRequest) GetRedirectToOk() (*string, bool) {
	if o == nil || isNil(o.RedirectTo) {
		return nil, false
	}
	return o.RedirectTo, true
}

// HasRedirectTo returns a boolean if a field has been set.
func (o *CreateFactorRegistrationRequest) HasRedirectTo() bool {
	if o != nil && !isNil(o.RedirectTo) {
		return true
	}

	return false
}

// SetRedirectTo gets a reference to the given string and assigns it to the RedirectTo field.
func (o *CreateFactorRegistrationRequest) SetRedirectTo(v string) {
	o.RedirectTo = &v
}

// GetCustomMessage returns the CustomMessage field value if set, zero value otherwise.
func (o *CreateFactorRegistrationRequest) GetCustomMessage() string {
	if o == nil || isNil(o.CustomMessage) {
		var ret string
		return ret
	}
	return *o.CustomMessage
}

// GetCustomMessageOk returns a tuple with the CustomMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFactorRegistrationRequest) GetCustomMessageOk() (*string, bool) {
	if o == nil || isNil(o.CustomMessage) {
		return nil, false
	}
	return o.CustomMessage, true
}

// HasCustomMessage returns a boolean if a field has been set.
func (o *CreateFactorRegistrationRequest) HasCustomMessage() bool {
	if o != nil && !isNil(o.CustomMessage) {
		return true
	}

	return false
}

// SetCustomMessage gets a reference to the given string and assigns it to the CustomMessage field.
func (o *CreateFactorRegistrationRequest) SetCustomMessage(v string) {
	o.CustomMessage = &v
}

func (o CreateFactorRegistrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFactorRegistrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["factor_id"] = o.FactorId
	toSerialize["display_name"] = o.DisplayName
	if !isNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if !isNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	if !isNil(o.RedirectTo) {
		toSerialize["redirect_to"] = o.RedirectTo
	}
	if !isNil(o.CustomMessage) {
		toSerialize["custom_message"] = o.CustomMessage
	}
	return toSerialize, nil
}

type NullableCreateFactorRegistrationRequest struct {
	value *CreateFactorRegistrationRequest
	isSet bool
}

func (v NullableCreateFactorRegistrationRequest) Get() *CreateFactorRegistrationRequest {
	return v.value
}

func (v *NullableCreateFactorRegistrationRequest) Set(val *CreateFactorRegistrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFactorRegistrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFactorRegistrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFactorRegistrationRequest(val *CreateFactorRegistrationRequest) *NullableCreateFactorRegistrationRequest {
	return &NullableCreateFactorRegistrationRequest{value: val, isSet: true}
}

func (v NullableCreateFactorRegistrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFactorRegistrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


