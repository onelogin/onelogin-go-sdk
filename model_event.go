/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the Event type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Event{}

// Event struct for Event
type Event struct {
	// Account that triggered the event.
	AccountId *int32 `json:"account_id,omitempty"`
	// Acting system that triggered the event when the actor is not a user.
	ActorSystem *string `json:"actor_system,omitempty"`
	// ID of the user whose action triggered the event.
	ActorUserId *int32 `json:"actor_user_id,omitempty"`
	// First and last name of the user whose action triggered the event.
	ActorUserName *string `json:"actor_user_name,omitempty"`
	AdcId *int32 `json:"adc_id,omitempty"`
	// Name of the app involved in the event, if applicable.
	AppName *string `json:"app-name,omitempty"`
	// ID of the app involved in the event, if applicable.
	AppId *int32 `json:"app_id,omitempty"`
	AssumedBySuperadminOrReseller *int32 `json:"assumed_by_superadmin_or_reseller,omitempty"`
	// ID of the user who assumed the role of the acting user to trigger the event, if applicable.
	AssumingActingUserId *int32 `json:"assuming_acting_user_id,omitempty"`
	CertificateId *int32 `json:"certificate_id,omitempty"`
	// Client ID used to generate the access token that made the API call that generated the event.
	ClientId *string `json:"client_id,omitempty"`
	// ISO8601 Time and date at which the event was created. This value is autogenerated by OneLogin.
	CreatedAt *string `json:"created_at,omitempty"`
	// More details about the event.
	CustomMessage *string `json:"custom_message,omitempty"`
	// Directory sync run ID.
	DirectorySyncRunId *int32 `json:"directory_sync_run_id,omitempty"`
	// Provisioning error details, if applicable.
	ErrorDescription *string `json:"error_description,omitempty"`
	// Type of event triggered.
	EventTypeId *int32 `json:"event_type_id,omitempty"`
	// Name of a group involved in the event.
	GroupName *string `json:"group-name,omitempty"`
	// ID of a group involved in the event.
	GroupId *int32 `json:"group_id,omitempty"`
	// Event's unique ID in OneLogin. Autogenerated by OneLogin.
	Id *int32 `json:"id,omitempty"`
	// IP address of the machine used to trigger the event.
	Ipaddr *string `json:"ipaddr,omitempty"`
	MappingId *int32 `json:"mapping_id,omitempty"`
	// More details about the event.
	Notes *string `json:"notes,omitempty"`
	ObjectId *int32 `json:"object_id,omitempty"`
	// ID of a device involved in the event.
	OtpDeviceId *int32 `json:"otp_device_id,omitempty"`
	// Name of a device involved in the event.
	OtpDeviceName *string `json:"otp_device_name,omitempty"`
	Param *string `json:"param,omitempty"`
	// ID of the policy involved in the event.
	PolicyId *int32 `json:"policy_id,omitempty"`
	// Name of the policy involved in the event.
	PolicyName *string `json:"policy_name,omitempty"`
	PolicyType *string `json:"policy_type,omitempty"`
	PrivilegeId *int32 `json:"privilege_id,omitempty"`
	ProxyIp *string `json:"proxy_ip,omitempty"`
	RadiusConfigId *int32 `json:"radius_config_id,omitempty"`
	ResolvedAt *string `json:"resolved_at,omitempty"`
	// ID of the resource (user, role, group, and so forth) associated with the event.
	ResourceTypeId *int32 `json:"resource_type_id,omitempty"`
	// Identifier for risk cookie
	RiskCookieId *string `json:"risk_cookie_id,omitempty"`
	RiskReasons *string `json:"risk_reasons,omitempty"`
	RiskScore *int32 `json:"risk_score,omitempty"`
	// ID of a role involved in the event.
	RoleId *int32 `json:"role_id,omitempty"`
	// Name of a role involved in the event.
	RoleName *string `json:"role_name,omitempty"`
	ServiceDirectoryId *int32 `json:"service_directory_id,omitempty"`
	Solved *bool `json:"solved,omitempty"`
	TrustedIdpId *int32 `json:"trusted_idp_id,omitempty"`
	UserFieldId *int32 `json:"user_field_id,omitempty"`
	// ID of the user that was acted upon to trigger the event.
	UserId *int32 `json:"user_id,omitempty"`
	// Name of the user that was acted upon to trigger the event.
	UserName *string `json:"user_name,omitempty"`
}

// NewEvent instantiates a new Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvent() *Event {
	this := Event{}
	return &this
}

// NewEventWithDefaults instantiates a new Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventWithDefaults() *Event {
	this := Event{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *Event) GetAccountId() int32 {
	if o == nil || isNil(o.AccountId) {
		var ret int32
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAccountIdOk() (*int32, bool) {
	if o == nil || isNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *Event) HasAccountId() bool {
	if o != nil && !isNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int32 and assigns it to the AccountId field.
func (o *Event) SetAccountId(v int32) {
	o.AccountId = &v
}

// GetActorSystem returns the ActorSystem field value if set, zero value otherwise.
func (o *Event) GetActorSystem() string {
	if o == nil || isNil(o.ActorSystem) {
		var ret string
		return ret
	}
	return *o.ActorSystem
}

// GetActorSystemOk returns a tuple with the ActorSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetActorSystemOk() (*string, bool) {
	if o == nil || isNil(o.ActorSystem) {
		return nil, false
	}
	return o.ActorSystem, true
}

// HasActorSystem returns a boolean if a field has been set.
func (o *Event) HasActorSystem() bool {
	if o != nil && !isNil(o.ActorSystem) {
		return true
	}

	return false
}

// SetActorSystem gets a reference to the given string and assigns it to the ActorSystem field.
func (o *Event) SetActorSystem(v string) {
	o.ActorSystem = &v
}

// GetActorUserId returns the ActorUserId field value if set, zero value otherwise.
func (o *Event) GetActorUserId() int32 {
	if o == nil || isNil(o.ActorUserId) {
		var ret int32
		return ret
	}
	return *o.ActorUserId
}

// GetActorUserIdOk returns a tuple with the ActorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetActorUserIdOk() (*int32, bool) {
	if o == nil || isNil(o.ActorUserId) {
		return nil, false
	}
	return o.ActorUserId, true
}

// HasActorUserId returns a boolean if a field has been set.
func (o *Event) HasActorUserId() bool {
	if o != nil && !isNil(o.ActorUserId) {
		return true
	}

	return false
}

// SetActorUserId gets a reference to the given int32 and assigns it to the ActorUserId field.
func (o *Event) SetActorUserId(v int32) {
	o.ActorUserId = &v
}

// GetActorUserName returns the ActorUserName field value if set, zero value otherwise.
func (o *Event) GetActorUserName() string {
	if o == nil || isNil(o.ActorUserName) {
		var ret string
		return ret
	}
	return *o.ActorUserName
}

// GetActorUserNameOk returns a tuple with the ActorUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetActorUserNameOk() (*string, bool) {
	if o == nil || isNil(o.ActorUserName) {
		return nil, false
	}
	return o.ActorUserName, true
}

// HasActorUserName returns a boolean if a field has been set.
func (o *Event) HasActorUserName() bool {
	if o != nil && !isNil(o.ActorUserName) {
		return true
	}

	return false
}

// SetActorUserName gets a reference to the given string and assigns it to the ActorUserName field.
func (o *Event) SetActorUserName(v string) {
	o.ActorUserName = &v
}

// GetAdcId returns the AdcId field value if set, zero value otherwise.
func (o *Event) GetAdcId() int32 {
	if o == nil || isNil(o.AdcId) {
		var ret int32
		return ret
	}
	return *o.AdcId
}

// GetAdcIdOk returns a tuple with the AdcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAdcIdOk() (*int32, bool) {
	if o == nil || isNil(o.AdcId) {
		return nil, false
	}
	return o.AdcId, true
}

// HasAdcId returns a boolean if a field has been set.
func (o *Event) HasAdcId() bool {
	if o != nil && !isNil(o.AdcId) {
		return true
	}

	return false
}

// SetAdcId gets a reference to the given int32 and assigns it to the AdcId field.
func (o *Event) SetAdcId(v int32) {
	o.AdcId = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *Event) GetAppName() string {
	if o == nil || isNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAppNameOk() (*string, bool) {
	if o == nil || isNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *Event) HasAppName() bool {
	if o != nil && !isNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *Event) SetAppName(v string) {
	o.AppName = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *Event) GetAppId() int32 {
	if o == nil || isNil(o.AppId) {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAppIdOk() (*int32, bool) {
	if o == nil || isNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *Event) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *Event) SetAppId(v int32) {
	o.AppId = &v
}

// GetAssumedBySuperadminOrReseller returns the AssumedBySuperadminOrReseller field value if set, zero value otherwise.
func (o *Event) GetAssumedBySuperadminOrReseller() int32 {
	if o == nil || isNil(o.AssumedBySuperadminOrReseller) {
		var ret int32
		return ret
	}
	return *o.AssumedBySuperadminOrReseller
}

// GetAssumedBySuperadminOrResellerOk returns a tuple with the AssumedBySuperadminOrReseller field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAssumedBySuperadminOrResellerOk() (*int32, bool) {
	if o == nil || isNil(o.AssumedBySuperadminOrReseller) {
		return nil, false
	}
	return o.AssumedBySuperadminOrReseller, true
}

// HasAssumedBySuperadminOrReseller returns a boolean if a field has been set.
func (o *Event) HasAssumedBySuperadminOrReseller() bool {
	if o != nil && !isNil(o.AssumedBySuperadminOrReseller) {
		return true
	}

	return false
}

// SetAssumedBySuperadminOrReseller gets a reference to the given int32 and assigns it to the AssumedBySuperadminOrReseller field.
func (o *Event) SetAssumedBySuperadminOrReseller(v int32) {
	o.AssumedBySuperadminOrReseller = &v
}

// GetAssumingActingUserId returns the AssumingActingUserId field value if set, zero value otherwise.
func (o *Event) GetAssumingActingUserId() int32 {
	if o == nil || isNil(o.AssumingActingUserId) {
		var ret int32
		return ret
	}
	return *o.AssumingActingUserId
}

// GetAssumingActingUserIdOk returns a tuple with the AssumingActingUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetAssumingActingUserIdOk() (*int32, bool) {
	if o == nil || isNil(o.AssumingActingUserId) {
		return nil, false
	}
	return o.AssumingActingUserId, true
}

// HasAssumingActingUserId returns a boolean if a field has been set.
func (o *Event) HasAssumingActingUserId() bool {
	if o != nil && !isNil(o.AssumingActingUserId) {
		return true
	}

	return false
}

// SetAssumingActingUserId gets a reference to the given int32 and assigns it to the AssumingActingUserId field.
func (o *Event) SetAssumingActingUserId(v int32) {
	o.AssumingActingUserId = &v
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *Event) GetCertificateId() int32 {
	if o == nil || isNil(o.CertificateId) {
		var ret int32
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *Event) HasCertificateId() bool {
	if o != nil && !isNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given int32 and assigns it to the CertificateId field.
func (o *Event) SetCertificateId(v int32) {
	o.CertificateId = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *Event) GetClientId() string {
	if o == nil || isNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetClientIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *Event) HasClientId() bool {
	if o != nil && !isNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *Event) SetClientId(v string) {
	o.ClientId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Event) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Event) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *Event) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCustomMessage returns the CustomMessage field value if set, zero value otherwise.
func (o *Event) GetCustomMessage() string {
	if o == nil || isNil(o.CustomMessage) {
		var ret string
		return ret
	}
	return *o.CustomMessage
}

// GetCustomMessageOk returns a tuple with the CustomMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetCustomMessageOk() (*string, bool) {
	if o == nil || isNil(o.CustomMessage) {
		return nil, false
	}
	return o.CustomMessage, true
}

// HasCustomMessage returns a boolean if a field has been set.
func (o *Event) HasCustomMessage() bool {
	if o != nil && !isNil(o.CustomMessage) {
		return true
	}

	return false
}

// SetCustomMessage gets a reference to the given string and assigns it to the CustomMessage field.
func (o *Event) SetCustomMessage(v string) {
	o.CustomMessage = &v
}

// GetDirectorySyncRunId returns the DirectorySyncRunId field value if set, zero value otherwise.
func (o *Event) GetDirectorySyncRunId() int32 {
	if o == nil || isNil(o.DirectorySyncRunId) {
		var ret int32
		return ret
	}
	return *o.DirectorySyncRunId
}

// GetDirectorySyncRunIdOk returns a tuple with the DirectorySyncRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetDirectorySyncRunIdOk() (*int32, bool) {
	if o == nil || isNil(o.DirectorySyncRunId) {
		return nil, false
	}
	return o.DirectorySyncRunId, true
}

// HasDirectorySyncRunId returns a boolean if a field has been set.
func (o *Event) HasDirectorySyncRunId() bool {
	if o != nil && !isNil(o.DirectorySyncRunId) {
		return true
	}

	return false
}

// SetDirectorySyncRunId gets a reference to the given int32 and assigns it to the DirectorySyncRunId field.
func (o *Event) SetDirectorySyncRunId(v int32) {
	o.DirectorySyncRunId = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *Event) GetErrorDescription() string {
	if o == nil || isNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *Event) HasErrorDescription() bool {
	if o != nil && !isNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *Event) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetEventTypeId returns the EventTypeId field value if set, zero value otherwise.
func (o *Event) GetEventTypeId() int32 {
	if o == nil || isNil(o.EventTypeId) {
		var ret int32
		return ret
	}
	return *o.EventTypeId
}

// GetEventTypeIdOk returns a tuple with the EventTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetEventTypeIdOk() (*int32, bool) {
	if o == nil || isNil(o.EventTypeId) {
		return nil, false
	}
	return o.EventTypeId, true
}

// HasEventTypeId returns a boolean if a field has been set.
func (o *Event) HasEventTypeId() bool {
	if o != nil && !isNil(o.EventTypeId) {
		return true
	}

	return false
}

// SetEventTypeId gets a reference to the given int32 and assigns it to the EventTypeId field.
func (o *Event) SetEventTypeId(v int32) {
	o.EventTypeId = &v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *Event) GetGroupName() string {
	if o == nil || isNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetGroupNameOk() (*string, bool) {
	if o == nil || isNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *Event) HasGroupName() bool {
	if o != nil && !isNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *Event) SetGroupName(v string) {
	o.GroupName = &v
}

// GetGroupId returns the GroupId field value if set, zero value otherwise.
func (o *Event) GetGroupId() int32 {
	if o == nil || isNil(o.GroupId) {
		var ret int32
		return ret
	}
	return *o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetGroupIdOk() (*int32, bool) {
	if o == nil || isNil(o.GroupId) {
		return nil, false
	}
	return o.GroupId, true
}

// HasGroupId returns a boolean if a field has been set.
func (o *Event) HasGroupId() bool {
	if o != nil && !isNil(o.GroupId) {
		return true
	}

	return false
}

// SetGroupId gets a reference to the given int32 and assigns it to the GroupId field.
func (o *Event) SetGroupId(v int32) {
	o.GroupId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Event) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Event) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Event) SetId(v int32) {
	o.Id = &v
}

// GetIpaddr returns the Ipaddr field value if set, zero value otherwise.
func (o *Event) GetIpaddr() string {
	if o == nil || isNil(o.Ipaddr) {
		var ret string
		return ret
	}
	return *o.Ipaddr
}

// GetIpaddrOk returns a tuple with the Ipaddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetIpaddrOk() (*string, bool) {
	if o == nil || isNil(o.Ipaddr) {
		return nil, false
	}
	return o.Ipaddr, true
}

// HasIpaddr returns a boolean if a field has been set.
func (o *Event) HasIpaddr() bool {
	if o != nil && !isNil(o.Ipaddr) {
		return true
	}

	return false
}

// SetIpaddr gets a reference to the given string and assigns it to the Ipaddr field.
func (o *Event) SetIpaddr(v string) {
	o.Ipaddr = &v
}

// GetMappingId returns the MappingId field value if set, zero value otherwise.
func (o *Event) GetMappingId() int32 {
	if o == nil || isNil(o.MappingId) {
		var ret int32
		return ret
	}
	return *o.MappingId
}

// GetMappingIdOk returns a tuple with the MappingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetMappingIdOk() (*int32, bool) {
	if o == nil || isNil(o.MappingId) {
		return nil, false
	}
	return o.MappingId, true
}

// HasMappingId returns a boolean if a field has been set.
func (o *Event) HasMappingId() bool {
	if o != nil && !isNil(o.MappingId) {
		return true
	}

	return false
}

// SetMappingId gets a reference to the given int32 and assigns it to the MappingId field.
func (o *Event) SetMappingId(v int32) {
	o.MappingId = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *Event) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *Event) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *Event) SetNotes(v string) {
	o.Notes = &v
}

// GetObjectId returns the ObjectId field value if set, zero value otherwise.
func (o *Event) GetObjectId() int32 {
	if o == nil || isNil(o.ObjectId) {
		var ret int32
		return ret
	}
	return *o.ObjectId
}

// GetObjectIdOk returns a tuple with the ObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetObjectIdOk() (*int32, bool) {
	if o == nil || isNil(o.ObjectId) {
		return nil, false
	}
	return o.ObjectId, true
}

// HasObjectId returns a boolean if a field has been set.
func (o *Event) HasObjectId() bool {
	if o != nil && !isNil(o.ObjectId) {
		return true
	}

	return false
}

// SetObjectId gets a reference to the given int32 and assigns it to the ObjectId field.
func (o *Event) SetObjectId(v int32) {
	o.ObjectId = &v
}

// GetOtpDeviceId returns the OtpDeviceId field value if set, zero value otherwise.
func (o *Event) GetOtpDeviceId() int32 {
	if o == nil || isNil(o.OtpDeviceId) {
		var ret int32
		return ret
	}
	return *o.OtpDeviceId
}

// GetOtpDeviceIdOk returns a tuple with the OtpDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetOtpDeviceIdOk() (*int32, bool) {
	if o == nil || isNil(o.OtpDeviceId) {
		return nil, false
	}
	return o.OtpDeviceId, true
}

// HasOtpDeviceId returns a boolean if a field has been set.
func (o *Event) HasOtpDeviceId() bool {
	if o != nil && !isNil(o.OtpDeviceId) {
		return true
	}

	return false
}

// SetOtpDeviceId gets a reference to the given int32 and assigns it to the OtpDeviceId field.
func (o *Event) SetOtpDeviceId(v int32) {
	o.OtpDeviceId = &v
}

// GetOtpDeviceName returns the OtpDeviceName field value if set, zero value otherwise.
func (o *Event) GetOtpDeviceName() string {
	if o == nil || isNil(o.OtpDeviceName) {
		var ret string
		return ret
	}
	return *o.OtpDeviceName
}

// GetOtpDeviceNameOk returns a tuple with the OtpDeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetOtpDeviceNameOk() (*string, bool) {
	if o == nil || isNil(o.OtpDeviceName) {
		return nil, false
	}
	return o.OtpDeviceName, true
}

// HasOtpDeviceName returns a boolean if a field has been set.
func (o *Event) HasOtpDeviceName() bool {
	if o != nil && !isNil(o.OtpDeviceName) {
		return true
	}

	return false
}

// SetOtpDeviceName gets a reference to the given string and assigns it to the OtpDeviceName field.
func (o *Event) SetOtpDeviceName(v string) {
	o.OtpDeviceName = &v
}

// GetParam returns the Param field value if set, zero value otherwise.
func (o *Event) GetParam() string {
	if o == nil || isNil(o.Param) {
		var ret string
		return ret
	}
	return *o.Param
}

// GetParamOk returns a tuple with the Param field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetParamOk() (*string, bool) {
	if o == nil || isNil(o.Param) {
		return nil, false
	}
	return o.Param, true
}

// HasParam returns a boolean if a field has been set.
func (o *Event) HasParam() bool {
	if o != nil && !isNil(o.Param) {
		return true
	}

	return false
}

// SetParam gets a reference to the given string and assigns it to the Param field.
func (o *Event) SetParam(v string) {
	o.Param = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *Event) GetPolicyId() int32 {
	if o == nil || isNil(o.PolicyId) {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetPolicyIdOk() (*int32, bool) {
	if o == nil || isNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *Event) HasPolicyId() bool {
	if o != nil && !isNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *Event) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *Event) GetPolicyName() string {
	if o == nil || isNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetPolicyNameOk() (*string, bool) {
	if o == nil || isNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *Event) HasPolicyName() bool {
	if o != nil && !isNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *Event) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *Event) GetPolicyType() string {
	if o == nil || isNil(o.PolicyType) {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetPolicyTypeOk() (*string, bool) {
	if o == nil || isNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *Event) HasPolicyType() bool {
	if o != nil && !isNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *Event) SetPolicyType(v string) {
	o.PolicyType = &v
}

// GetPrivilegeId returns the PrivilegeId field value if set, zero value otherwise.
func (o *Event) GetPrivilegeId() int32 {
	if o == nil || isNil(o.PrivilegeId) {
		var ret int32
		return ret
	}
	return *o.PrivilegeId
}

// GetPrivilegeIdOk returns a tuple with the PrivilegeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetPrivilegeIdOk() (*int32, bool) {
	if o == nil || isNil(o.PrivilegeId) {
		return nil, false
	}
	return o.PrivilegeId, true
}

// HasPrivilegeId returns a boolean if a field has been set.
func (o *Event) HasPrivilegeId() bool {
	if o != nil && !isNil(o.PrivilegeId) {
		return true
	}

	return false
}

// SetPrivilegeId gets a reference to the given int32 and assigns it to the PrivilegeId field.
func (o *Event) SetPrivilegeId(v int32) {
	o.PrivilegeId = &v
}

// GetProxyIp returns the ProxyIp field value if set, zero value otherwise.
func (o *Event) GetProxyIp() string {
	if o == nil || isNil(o.ProxyIp) {
		var ret string
		return ret
	}
	return *o.ProxyIp
}

// GetProxyIpOk returns a tuple with the ProxyIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetProxyIpOk() (*string, bool) {
	if o == nil || isNil(o.ProxyIp) {
		return nil, false
	}
	return o.ProxyIp, true
}

// HasProxyIp returns a boolean if a field has been set.
func (o *Event) HasProxyIp() bool {
	if o != nil && !isNil(o.ProxyIp) {
		return true
	}

	return false
}

// SetProxyIp gets a reference to the given string and assigns it to the ProxyIp field.
func (o *Event) SetProxyIp(v string) {
	o.ProxyIp = &v
}

// GetRadiusConfigId returns the RadiusConfigId field value if set, zero value otherwise.
func (o *Event) GetRadiusConfigId() int32 {
	if o == nil || isNil(o.RadiusConfigId) {
		var ret int32
		return ret
	}
	return *o.RadiusConfigId
}

// GetRadiusConfigIdOk returns a tuple with the RadiusConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRadiusConfigIdOk() (*int32, bool) {
	if o == nil || isNil(o.RadiusConfigId) {
		return nil, false
	}
	return o.RadiusConfigId, true
}

// HasRadiusConfigId returns a boolean if a field has been set.
func (o *Event) HasRadiusConfigId() bool {
	if o != nil && !isNil(o.RadiusConfigId) {
		return true
	}

	return false
}

// SetRadiusConfigId gets a reference to the given int32 and assigns it to the RadiusConfigId field.
func (o *Event) SetRadiusConfigId(v int32) {
	o.RadiusConfigId = &v
}

// GetResolvedAt returns the ResolvedAt field value if set, zero value otherwise.
func (o *Event) GetResolvedAt() string {
	if o == nil || isNil(o.ResolvedAt) {
		var ret string
		return ret
	}
	return *o.ResolvedAt
}

// GetResolvedAtOk returns a tuple with the ResolvedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetResolvedAtOk() (*string, bool) {
	if o == nil || isNil(o.ResolvedAt) {
		return nil, false
	}
	return o.ResolvedAt, true
}

// HasResolvedAt returns a boolean if a field has been set.
func (o *Event) HasResolvedAt() bool {
	if o != nil && !isNil(o.ResolvedAt) {
		return true
	}

	return false
}

// SetResolvedAt gets a reference to the given string and assigns it to the ResolvedAt field.
func (o *Event) SetResolvedAt(v string) {
	o.ResolvedAt = &v
}

// GetResourceTypeId returns the ResourceTypeId field value if set, zero value otherwise.
func (o *Event) GetResourceTypeId() int32 {
	if o == nil || isNil(o.ResourceTypeId) {
		var ret int32
		return ret
	}
	return *o.ResourceTypeId
}

// GetResourceTypeIdOk returns a tuple with the ResourceTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetResourceTypeIdOk() (*int32, bool) {
	if o == nil || isNil(o.ResourceTypeId) {
		return nil, false
	}
	return o.ResourceTypeId, true
}

// HasResourceTypeId returns a boolean if a field has been set.
func (o *Event) HasResourceTypeId() bool {
	if o != nil && !isNil(o.ResourceTypeId) {
		return true
	}

	return false
}

// SetResourceTypeId gets a reference to the given int32 and assigns it to the ResourceTypeId field.
func (o *Event) SetResourceTypeId(v int32) {
	o.ResourceTypeId = &v
}

// GetRiskCookieId returns the RiskCookieId field value if set, zero value otherwise.
func (o *Event) GetRiskCookieId() string {
	if o == nil || isNil(o.RiskCookieId) {
		var ret string
		return ret
	}
	return *o.RiskCookieId
}

// GetRiskCookieIdOk returns a tuple with the RiskCookieId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRiskCookieIdOk() (*string, bool) {
	if o == nil || isNil(o.RiskCookieId) {
		return nil, false
	}
	return o.RiskCookieId, true
}

// HasRiskCookieId returns a boolean if a field has been set.
func (o *Event) HasRiskCookieId() bool {
	if o != nil && !isNil(o.RiskCookieId) {
		return true
	}

	return false
}

// SetRiskCookieId gets a reference to the given string and assigns it to the RiskCookieId field.
func (o *Event) SetRiskCookieId(v string) {
	o.RiskCookieId = &v
}

// GetRiskReasons returns the RiskReasons field value if set, zero value otherwise.
func (o *Event) GetRiskReasons() string {
	if o == nil || isNil(o.RiskReasons) {
		var ret string
		return ret
	}
	return *o.RiskReasons
}

// GetRiskReasonsOk returns a tuple with the RiskReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRiskReasonsOk() (*string, bool) {
	if o == nil || isNil(o.RiskReasons) {
		return nil, false
	}
	return o.RiskReasons, true
}

// HasRiskReasons returns a boolean if a field has been set.
func (o *Event) HasRiskReasons() bool {
	if o != nil && !isNil(o.RiskReasons) {
		return true
	}

	return false
}

// SetRiskReasons gets a reference to the given string and assigns it to the RiskReasons field.
func (o *Event) SetRiskReasons(v string) {
	o.RiskReasons = &v
}

// GetRiskScore returns the RiskScore field value if set, zero value otherwise.
func (o *Event) GetRiskScore() int32 {
	if o == nil || isNil(o.RiskScore) {
		var ret int32
		return ret
	}
	return *o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRiskScoreOk() (*int32, bool) {
	if o == nil || isNil(o.RiskScore) {
		return nil, false
	}
	return o.RiskScore, true
}

// HasRiskScore returns a boolean if a field has been set.
func (o *Event) HasRiskScore() bool {
	if o != nil && !isNil(o.RiskScore) {
		return true
	}

	return false
}

// SetRiskScore gets a reference to the given int32 and assigns it to the RiskScore field.
func (o *Event) SetRiskScore(v int32) {
	o.RiskScore = &v
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *Event) GetRoleId() int32 {
	if o == nil || isNil(o.RoleId) {
		var ret int32
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRoleIdOk() (*int32, bool) {
	if o == nil || isNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *Event) HasRoleId() bool {
	if o != nil && !isNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given int32 and assigns it to the RoleId field.
func (o *Event) SetRoleId(v int32) {
	o.RoleId = &v
}

// GetRoleName returns the RoleName field value if set, zero value otherwise.
func (o *Event) GetRoleName() string {
	if o == nil || isNil(o.RoleName) {
		var ret string
		return ret
	}
	return *o.RoleName
}

// GetRoleNameOk returns a tuple with the RoleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetRoleNameOk() (*string, bool) {
	if o == nil || isNil(o.RoleName) {
		return nil, false
	}
	return o.RoleName, true
}

// HasRoleName returns a boolean if a field has been set.
func (o *Event) HasRoleName() bool {
	if o != nil && !isNil(o.RoleName) {
		return true
	}

	return false
}

// SetRoleName gets a reference to the given string and assigns it to the RoleName field.
func (o *Event) SetRoleName(v string) {
	o.RoleName = &v
}

// GetServiceDirectoryId returns the ServiceDirectoryId field value if set, zero value otherwise.
func (o *Event) GetServiceDirectoryId() int32 {
	if o == nil || isNil(o.ServiceDirectoryId) {
		var ret int32
		return ret
	}
	return *o.ServiceDirectoryId
}

// GetServiceDirectoryIdOk returns a tuple with the ServiceDirectoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetServiceDirectoryIdOk() (*int32, bool) {
	if o == nil || isNil(o.ServiceDirectoryId) {
		return nil, false
	}
	return o.ServiceDirectoryId, true
}

// HasServiceDirectoryId returns a boolean if a field has been set.
func (o *Event) HasServiceDirectoryId() bool {
	if o != nil && !isNil(o.ServiceDirectoryId) {
		return true
	}

	return false
}

// SetServiceDirectoryId gets a reference to the given int32 and assigns it to the ServiceDirectoryId field.
func (o *Event) SetServiceDirectoryId(v int32) {
	o.ServiceDirectoryId = &v
}

// GetSolved returns the Solved field value if set, zero value otherwise.
func (o *Event) GetSolved() bool {
	if o == nil || isNil(o.Solved) {
		var ret bool
		return ret
	}
	return *o.Solved
}

// GetSolvedOk returns a tuple with the Solved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetSolvedOk() (*bool, bool) {
	if o == nil || isNil(o.Solved) {
		return nil, false
	}
	return o.Solved, true
}

// HasSolved returns a boolean if a field has been set.
func (o *Event) HasSolved() bool {
	if o != nil && !isNil(o.Solved) {
		return true
	}

	return false
}

// SetSolved gets a reference to the given bool and assigns it to the Solved field.
func (o *Event) SetSolved(v bool) {
	o.Solved = &v
}

// GetTrustedIdpId returns the TrustedIdpId field value if set, zero value otherwise.
func (o *Event) GetTrustedIdpId() int32 {
	if o == nil || isNil(o.TrustedIdpId) {
		var ret int32
		return ret
	}
	return *o.TrustedIdpId
}

// GetTrustedIdpIdOk returns a tuple with the TrustedIdpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetTrustedIdpIdOk() (*int32, bool) {
	if o == nil || isNil(o.TrustedIdpId) {
		return nil, false
	}
	return o.TrustedIdpId, true
}

// HasTrustedIdpId returns a boolean if a field has been set.
func (o *Event) HasTrustedIdpId() bool {
	if o != nil && !isNil(o.TrustedIdpId) {
		return true
	}

	return false
}

// SetTrustedIdpId gets a reference to the given int32 and assigns it to the TrustedIdpId field.
func (o *Event) SetTrustedIdpId(v int32) {
	o.TrustedIdpId = &v
}

// GetUserFieldId returns the UserFieldId field value if set, zero value otherwise.
func (o *Event) GetUserFieldId() int32 {
	if o == nil || isNil(o.UserFieldId) {
		var ret int32
		return ret
	}
	return *o.UserFieldId
}

// GetUserFieldIdOk returns a tuple with the UserFieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetUserFieldIdOk() (*int32, bool) {
	if o == nil || isNil(o.UserFieldId) {
		return nil, false
	}
	return o.UserFieldId, true
}

// HasUserFieldId returns a boolean if a field has been set.
func (o *Event) HasUserFieldId() bool {
	if o != nil && !isNil(o.UserFieldId) {
		return true
	}

	return false
}

// SetUserFieldId gets a reference to the given int32 and assigns it to the UserFieldId field.
func (o *Event) SetUserFieldId(v int32) {
	o.UserFieldId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Event) GetUserId() int32 {
	if o == nil || isNil(o.UserId) {
		var ret int32
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetUserIdOk() (*int32, bool) {
	if o == nil || isNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Event) HasUserId() bool {
	if o != nil && !isNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int32 and assigns it to the UserId field.
func (o *Event) SetUserId(v int32) {
	o.UserId = &v
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *Event) GetUserName() string {
	if o == nil || isNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetUserNameOk() (*string, bool) {
	if o == nil || isNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *Event) HasUserName() bool {
	if o != nil && !isNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *Event) SetUserName(v string) {
	o.UserName = &v
}

func (o Event) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Event) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AccountId) {
		toSerialize["account_id"] = o.AccountId
	}
	if !isNil(o.ActorSystem) {
		toSerialize["actor_system"] = o.ActorSystem
	}
	if !isNil(o.ActorUserId) {
		toSerialize["actor_user_id"] = o.ActorUserId
	}
	if !isNil(o.ActorUserName) {
		toSerialize["actor_user_name"] = o.ActorUserName
	}
	if !isNil(o.AdcId) {
		toSerialize["adc_id"] = o.AdcId
	}
	if !isNil(o.AppName) {
		toSerialize["app-name"] = o.AppName
	}
	if !isNil(o.AppId) {
		toSerialize["app_id"] = o.AppId
	}
	if !isNil(o.AssumedBySuperadminOrReseller) {
		toSerialize["assumed_by_superadmin_or_reseller"] = o.AssumedBySuperadminOrReseller
	}
	if !isNil(o.AssumingActingUserId) {
		toSerialize["assuming_acting_user_id"] = o.AssumingActingUserId
	}
	if !isNil(o.CertificateId) {
		toSerialize["certificate_id"] = o.CertificateId
	}
	if !isNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.CustomMessage) {
		toSerialize["custom_message"] = o.CustomMessage
	}
	if !isNil(o.DirectorySyncRunId) {
		toSerialize["directory_sync_run_id"] = o.DirectorySyncRunId
	}
	if !isNil(o.ErrorDescription) {
		toSerialize["error_description"] = o.ErrorDescription
	}
	if !isNil(o.EventTypeId) {
		toSerialize["event_type_id"] = o.EventTypeId
	}
	if !isNil(o.GroupName) {
		toSerialize["group-name"] = o.GroupName
	}
	if !isNil(o.GroupId) {
		toSerialize["group_id"] = o.GroupId
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Ipaddr) {
		toSerialize["ipaddr"] = o.Ipaddr
	}
	if !isNil(o.MappingId) {
		toSerialize["mapping_id"] = o.MappingId
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !isNil(o.ObjectId) {
		toSerialize["object_id"] = o.ObjectId
	}
	if !isNil(o.OtpDeviceId) {
		toSerialize["otp_device_id"] = o.OtpDeviceId
	}
	if !isNil(o.OtpDeviceName) {
		toSerialize["otp_device_name"] = o.OtpDeviceName
	}
	if !isNil(o.Param) {
		toSerialize["param"] = o.Param
	}
	if !isNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !isNil(o.PolicyName) {
		toSerialize["policy_name"] = o.PolicyName
	}
	if !isNil(o.PolicyType) {
		toSerialize["policy_type"] = o.PolicyType
	}
	if !isNil(o.PrivilegeId) {
		toSerialize["privilege_id"] = o.PrivilegeId
	}
	if !isNil(o.ProxyIp) {
		toSerialize["proxy_ip"] = o.ProxyIp
	}
	if !isNil(o.RadiusConfigId) {
		toSerialize["radius_config_id"] = o.RadiusConfigId
	}
	if !isNil(o.ResolvedAt) {
		toSerialize["resolved_at"] = o.ResolvedAt
	}
	if !isNil(o.ResourceTypeId) {
		toSerialize["resource_type_id"] = o.ResourceTypeId
	}
	if !isNil(o.RiskCookieId) {
		toSerialize["risk_cookie_id"] = o.RiskCookieId
	}
	if !isNil(o.RiskReasons) {
		toSerialize["risk_reasons"] = o.RiskReasons
	}
	if !isNil(o.RiskScore) {
		toSerialize["risk_score"] = o.RiskScore
	}
	if !isNil(o.RoleId) {
		toSerialize["role_id"] = o.RoleId
	}
	if !isNil(o.RoleName) {
		toSerialize["role_name"] = o.RoleName
	}
	if !isNil(o.ServiceDirectoryId) {
		toSerialize["service_directory_id"] = o.ServiceDirectoryId
	}
	if !isNil(o.Solved) {
		toSerialize["solved"] = o.Solved
	}
	if !isNil(o.TrustedIdpId) {
		toSerialize["trusted_idp_id"] = o.TrustedIdpId
	}
	if !isNil(o.UserFieldId) {
		toSerialize["user_field_id"] = o.UserFieldId
	}
	if !isNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !isNil(o.UserName) {
		toSerialize["user_name"] = o.UserName
	}
	return toSerialize, nil
}

type NullableEvent struct {
	value *Event
	isSet bool
}

func (v NullableEvent) Get() *Event {
	return v.value
}

func (v *NullableEvent) Set(val *Event) {
	v.value = val
	v.isSet = true
}

func (v NullableEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvent(val *Event) *NullableEvent {
	return &NullableEvent{value: val, isSet: true}
}

func (v NullableEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


