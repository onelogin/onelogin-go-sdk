/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GenerateOTPRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateOTPRequest{}

// GenerateOTPRequest struct for GenerateOTPRequest
type GenerateOTPRequest struct {
	// Set the duration of the token in seconds. Token expiration defaults to 259200 seconds = 72 hours. 72 hours is the max value.
	ExpiresIn *int32 `json:"expires_in,omitempty"`
	// Defines if the token is reusable multiple times within the expiry window. Value defaults to false. If set to true, token can be used multiple times, until it expires.
	Reusable *bool `json:"reusable,omitempty"`
}

// NewGenerateOTPRequest instantiates a new GenerateOTPRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateOTPRequest() *GenerateOTPRequest {
	this := GenerateOTPRequest{}
	var reusable bool = false
	this.Reusable = &reusable
	return &this
}

// NewGenerateOTPRequestWithDefaults instantiates a new GenerateOTPRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateOTPRequestWithDefaults() *GenerateOTPRequest {
	this := GenerateOTPRequest{}
	var reusable bool = false
	this.Reusable = &reusable
	return &this
}

// GetExpiresIn returns the ExpiresIn field value if set, zero value otherwise.
func (o *GenerateOTPRequest) GetExpiresIn() int32 {
	if o == nil || isNil(o.ExpiresIn) {
		var ret int32
		return ret
	}
	return *o.ExpiresIn
}

// GetExpiresInOk returns a tuple with the ExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateOTPRequest) GetExpiresInOk() (*int32, bool) {
	if o == nil || isNil(o.ExpiresIn) {
		return nil, false
	}
	return o.ExpiresIn, true
}

// HasExpiresIn returns a boolean if a field has been set.
func (o *GenerateOTPRequest) HasExpiresIn() bool {
	if o != nil && !isNil(o.ExpiresIn) {
		return true
	}

	return false
}

// SetExpiresIn gets a reference to the given int32 and assigns it to the ExpiresIn field.
func (o *GenerateOTPRequest) SetExpiresIn(v int32) {
	o.ExpiresIn = &v
}

// GetReusable returns the Reusable field value if set, zero value otherwise.
func (o *GenerateOTPRequest) GetReusable() bool {
	if o == nil || isNil(o.Reusable) {
		var ret bool
		return ret
	}
	return *o.Reusable
}

// GetReusableOk returns a tuple with the Reusable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateOTPRequest) GetReusableOk() (*bool, bool) {
	if o == nil || isNil(o.Reusable) {
		return nil, false
	}
	return o.Reusable, true
}

// HasReusable returns a boolean if a field has been set.
func (o *GenerateOTPRequest) HasReusable() bool {
	if o != nil && !isNil(o.Reusable) {
		return true
	}

	return false
}

// SetReusable gets a reference to the given bool and assigns it to the Reusable field.
func (o *GenerateOTPRequest) SetReusable(v bool) {
	o.Reusable = &v
}

func (o GenerateOTPRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateOTPRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExpiresIn) {
		toSerialize["expires_in"] = o.ExpiresIn
	}
	if !isNil(o.Reusable) {
		toSerialize["reusable"] = o.Reusable
	}
	return toSerialize, nil
}

type NullableGenerateOTPRequest struct {
	value *GenerateOTPRequest
	isSet bool
}

func (v NullableGenerateOTPRequest) Get() *GenerateOTPRequest {
	return v.value
}

func (v *NullableGenerateOTPRequest) Set(val *GenerateOTPRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateOTPRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateOTPRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateOTPRequest(val *GenerateOTPRequest) *NullableGenerateOTPRequest {
	return &NullableGenerateOTPRequest{value: val, isSet: true}
}

func (v NullableGenerateOTPRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateOTPRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


