/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GenericApp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericApp{}

// GenericApp struct for GenericApp
type GenericApp struct {
	// Apps unique ID in OneLogin.
	Id *int32 `json:"id,omitempty"`
	// The name of the app.
	Name *string `json:"name,omitempty"`
	// Indicates if the app is visible in the OneLogin portal.
	Visible *bool `json:"visible,omitempty"`
	// Freeform description of the app.
	Description *string `json:"description,omitempty"`
	// Freeform notes about the app.
	Notes *string `json:"notes,omitempty"`
	// A link to the apps icon url
	IconUrl *string `json:"icon_url,omitempty"`
	AuthMethod *AuthMethod `json:"auth_method,omitempty"`
	// The security policy assigned to the app.
	PolicyId *int32 `json:"policy_id,omitempty"`
	// Indicates whether or not administrators can access the app as a user that they have assumed control over.
	AllowAssumedSignin *bool `json:"allow_assumed_signin,omitempty"`
	// ID of the OneLogin portal tab that the app is assigned to.
	TabId *int32 `json:"tab_id,omitempty"`
	// ID of the connector to base the app from.
	ConnectorId *int32 `json:"connector_id,omitempty"`
	// the date the app was created
	CreatedAt *string `json:"created_at,omitempty"`
	// the date the app was last updated
	UpdatedAt *string `json:"updated_at,omitempty"`
	// List of Role IDs that are assigned to the app. On App Create or Update the entire array is replaced with the values provided.
	RoleIds []int32 `json:"role_ids,omitempty"`
	Provisioning *GenericAppProvisioning `json:"provisioning,omitempty"`
	Parameters *AppParameters `json:"parameters,omitempty"`
	EnforcementPoint *EnforcementPoint `json:"enforcement_point,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GenericApp GenericApp

// NewGenericApp instantiates a new GenericApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericApp() *GenericApp {
	this := GenericApp{}
	return &this
}

// NewGenericAppWithDefaults instantiates a new GenericApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericAppWithDefaults() *GenericApp {
	this := GenericApp{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GenericApp) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GenericApp) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GenericApp) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GenericApp) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GenericApp) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GenericApp) SetName(v string) {
	o.Name = &v
}

// GetVisible returns the Visible field value if set, zero value otherwise.
func (o *GenericApp) GetVisible() bool {
	if o == nil || isNil(o.Visible) {
		var ret bool
		return ret
	}
	return *o.Visible
}

// GetVisibleOk returns a tuple with the Visible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetVisibleOk() (*bool, bool) {
	if o == nil || isNil(o.Visible) {
		return nil, false
	}
	return o.Visible, true
}

// HasVisible returns a boolean if a field has been set.
func (o *GenericApp) HasVisible() bool {
	if o != nil && !isNil(o.Visible) {
		return true
	}

	return false
}

// SetVisible gets a reference to the given bool and assigns it to the Visible field.
func (o *GenericApp) SetVisible(v bool) {
	o.Visible = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GenericApp) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GenericApp) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GenericApp) SetDescription(v string) {
	o.Description = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *GenericApp) GetNotes() string {
	if o == nil || isNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetNotesOk() (*string, bool) {
	if o == nil || isNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *GenericApp) HasNotes() bool {
	if o != nil && !isNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *GenericApp) SetNotes(v string) {
	o.Notes = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *GenericApp) GetIconUrl() string {
	if o == nil || isNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetIconUrlOk() (*string, bool) {
	if o == nil || isNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *GenericApp) HasIconUrl() bool {
	if o != nil && !isNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *GenericApp) SetIconUrl(v string) {
	o.IconUrl = &v
}

// GetAuthMethod returns the AuthMethod field value if set, zero value otherwise.
func (o *GenericApp) GetAuthMethod() AuthMethod {
	if o == nil || isNil(o.AuthMethod) {
		var ret AuthMethod
		return ret
	}
	return *o.AuthMethod
}

// GetAuthMethodOk returns a tuple with the AuthMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetAuthMethodOk() (*AuthMethod, bool) {
	if o == nil || isNil(o.AuthMethod) {
		return nil, false
	}
	return o.AuthMethod, true
}

// HasAuthMethod returns a boolean if a field has been set.
func (o *GenericApp) HasAuthMethod() bool {
	if o != nil && !isNil(o.AuthMethod) {
		return true
	}

	return false
}

// SetAuthMethod gets a reference to the given AuthMethod and assigns it to the AuthMethod field.
func (o *GenericApp) SetAuthMethod(v AuthMethod) {
	o.AuthMethod = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *GenericApp) GetPolicyId() int32 {
	if o == nil || isNil(o.PolicyId) {
		var ret int32
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetPolicyIdOk() (*int32, bool) {
	if o == nil || isNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *GenericApp) HasPolicyId() bool {
	if o != nil && !isNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given int32 and assigns it to the PolicyId field.
func (o *GenericApp) SetPolicyId(v int32) {
	o.PolicyId = &v
}

// GetAllowAssumedSignin returns the AllowAssumedSignin field value if set, zero value otherwise.
func (o *GenericApp) GetAllowAssumedSignin() bool {
	if o == nil || isNil(o.AllowAssumedSignin) {
		var ret bool
		return ret
	}
	return *o.AllowAssumedSignin
}

// GetAllowAssumedSigninOk returns a tuple with the AllowAssumedSignin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetAllowAssumedSigninOk() (*bool, bool) {
	if o == nil || isNil(o.AllowAssumedSignin) {
		return nil, false
	}
	return o.AllowAssumedSignin, true
}

// HasAllowAssumedSignin returns a boolean if a field has been set.
func (o *GenericApp) HasAllowAssumedSignin() bool {
	if o != nil && !isNil(o.AllowAssumedSignin) {
		return true
	}

	return false
}

// SetAllowAssumedSignin gets a reference to the given bool and assigns it to the AllowAssumedSignin field.
func (o *GenericApp) SetAllowAssumedSignin(v bool) {
	o.AllowAssumedSignin = &v
}

// GetTabId returns the TabId field value if set, zero value otherwise.
func (o *GenericApp) GetTabId() int32 {
	if o == nil || isNil(o.TabId) {
		var ret int32
		return ret
	}
	return *o.TabId
}

// GetTabIdOk returns a tuple with the TabId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetTabIdOk() (*int32, bool) {
	if o == nil || isNil(o.TabId) {
		return nil, false
	}
	return o.TabId, true
}

// HasTabId returns a boolean if a field has been set.
func (o *GenericApp) HasTabId() bool {
	if o != nil && !isNil(o.TabId) {
		return true
	}

	return false
}

// SetTabId gets a reference to the given int32 and assigns it to the TabId field.
func (o *GenericApp) SetTabId(v int32) {
	o.TabId = &v
}

// GetConnectorId returns the ConnectorId field value if set, zero value otherwise.
func (o *GenericApp) GetConnectorId() int32 {
	if o == nil || isNil(o.ConnectorId) {
		var ret int32
		return ret
	}
	return *o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetConnectorIdOk() (*int32, bool) {
	if o == nil || isNil(o.ConnectorId) {
		return nil, false
	}
	return o.ConnectorId, true
}

// HasConnectorId returns a boolean if a field has been set.
func (o *GenericApp) HasConnectorId() bool {
	if o != nil && !isNil(o.ConnectorId) {
		return true
	}

	return false
}

// SetConnectorId gets a reference to the given int32 and assigns it to the ConnectorId field.
func (o *GenericApp) SetConnectorId(v int32) {
	o.ConnectorId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GenericApp) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GenericApp) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GenericApp) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GenericApp) GetUpdatedAt() string {
	if o == nil || isNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetUpdatedAtOk() (*string, bool) {
	if o == nil || isNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GenericApp) HasUpdatedAt() bool {
	if o != nil && !isNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GenericApp) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetRoleIds returns the RoleIds field value if set, zero value otherwise.
func (o *GenericApp) GetRoleIds() []int32 {
	if o == nil || isNil(o.RoleIds) {
		var ret []int32
		return ret
	}
	return o.RoleIds
}

// GetRoleIdsOk returns a tuple with the RoleIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetRoleIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.RoleIds) {
		return nil, false
	}
	return o.RoleIds, true
}

// HasRoleIds returns a boolean if a field has been set.
func (o *GenericApp) HasRoleIds() bool {
	if o != nil && !isNil(o.RoleIds) {
		return true
	}

	return false
}

// SetRoleIds gets a reference to the given []int32 and assigns it to the RoleIds field.
func (o *GenericApp) SetRoleIds(v []int32) {
	o.RoleIds = v
}

// GetProvisioning returns the Provisioning field value if set, zero value otherwise.
func (o *GenericApp) GetProvisioning() GenericAppProvisioning {
	if o == nil || isNil(o.Provisioning) {
		var ret GenericAppProvisioning
		return ret
	}
	return *o.Provisioning
}

// GetProvisioningOk returns a tuple with the Provisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetProvisioningOk() (*GenericAppProvisioning, bool) {
	if o == nil || isNil(o.Provisioning) {
		return nil, false
	}
	return o.Provisioning, true
}

// HasProvisioning returns a boolean if a field has been set.
func (o *GenericApp) HasProvisioning() bool {
	if o != nil && !isNil(o.Provisioning) {
		return true
	}

	return false
}

// SetProvisioning gets a reference to the given GenericAppProvisioning and assigns it to the Provisioning field.
func (o *GenericApp) SetProvisioning(v GenericAppProvisioning) {
	o.Provisioning = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *GenericApp) GetParameters() AppParameters {
	if o == nil || isNil(o.Parameters) {
		var ret AppParameters
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetParametersOk() (*AppParameters, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *GenericApp) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given AppParameters and assigns it to the Parameters field.
func (o *GenericApp) SetParameters(v AppParameters) {
	o.Parameters = &v
}

// GetEnforcementPoint returns the EnforcementPoint field value if set, zero value otherwise.
func (o *GenericApp) GetEnforcementPoint() EnforcementPoint {
	if o == nil || isNil(o.EnforcementPoint) {
		var ret EnforcementPoint
		return ret
	}
	return *o.EnforcementPoint
}

// GetEnforcementPointOk returns a tuple with the EnforcementPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericApp) GetEnforcementPointOk() (*EnforcementPoint, bool) {
	if o == nil || isNil(o.EnforcementPoint) {
		return nil, false
	}
	return o.EnforcementPoint, true
}

// HasEnforcementPoint returns a boolean if a field has been set.
func (o *GenericApp) HasEnforcementPoint() bool {
	if o != nil && !isNil(o.EnforcementPoint) {
		return true
	}

	return false
}

// SetEnforcementPoint gets a reference to the given EnforcementPoint and assigns it to the EnforcementPoint field.
func (o *GenericApp) SetEnforcementPoint(v EnforcementPoint) {
	o.EnforcementPoint = &v
}

func (o GenericApp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericApp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	// skip: id is readOnly
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Visible) {
		toSerialize["visible"] = o.Visible
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !isNil(o.IconUrl) {
		toSerialize["icon_url"] = o.IconUrl
	}
	if !isNil(o.AuthMethod) {
		toSerialize["auth_method"] = o.AuthMethod
	}
	if !isNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !isNil(o.AllowAssumedSignin) {
		toSerialize["allow_assumed_signin"] = o.AllowAssumedSignin
	}
	if !isNil(o.TabId) {
		toSerialize["tab_id"] = o.TabId
	}
	if !isNil(o.ConnectorId) {
		toSerialize["connector_id"] = o.ConnectorId
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !isNil(o.RoleIds) {
		toSerialize["role_ids"] = o.RoleIds
	}
	if !isNil(o.Provisioning) {
		toSerialize["provisioning"] = o.Provisioning
	}
	if !isNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !isNil(o.EnforcementPoint) {
		toSerialize["enforcement_point"] = o.EnforcementPoint
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GenericApp) UnmarshalJSON(bytes []byte) (err error) {
	varGenericApp := _GenericApp{}

	if err = json.Unmarshal(bytes, &varGenericApp); err == nil {
		*o = GenericApp(varGenericApp)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "visible")
		delete(additionalProperties, "description")
		delete(additionalProperties, "notes")
		delete(additionalProperties, "icon_url")
		delete(additionalProperties, "auth_method")
		delete(additionalProperties, "policy_id")
		delete(additionalProperties, "allow_assumed_signin")
		delete(additionalProperties, "tab_id")
		delete(additionalProperties, "connector_id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "role_ids")
		delete(additionalProperties, "provisioning")
		delete(additionalProperties, "parameters")
		delete(additionalProperties, "enforcement_point")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGenericApp struct {
	value *GenericApp
	isSet bool
}

func (v NullableGenericApp) Get() *GenericApp {
	return v.value
}

func (v *NullableGenericApp) Set(val *GenericApp) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericApp) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericApp(val *GenericApp) *NullableGenericApp {
	return &NullableGenericApp{value: val, isSet: true}
}

func (v NullableGenericApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


