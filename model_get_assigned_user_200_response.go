/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetAssignedUser200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAssignedUser200Response{}

// GetAssignedUser200Response struct for GetAssignedUser200Response
type GetAssignedUser200Response struct {
	Total *int32 `json:"total,omitempty"`
	Users []int32 `json:"users,omitempty"`
	BeforeCursor NullableInt32 `json:"beforeCursor,omitempty"`
	PreviousLink NullableString `json:"previousLink,omitempty"`
	AfterCursor NullableInt32 `json:"afterCursor,omitempty"`
	NextLink NullableString `json:"nextLink,omitempty"`
}

// NewGetAssignedUser200Response instantiates a new GetAssignedUser200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAssignedUser200Response() *GetAssignedUser200Response {
	this := GetAssignedUser200Response{}
	return &this
}

// NewGetAssignedUser200ResponseWithDefaults instantiates a new GetAssignedUser200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAssignedUser200ResponseWithDefaults() *GetAssignedUser200Response {
	this := GetAssignedUser200Response{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetAssignedUser200Response) GetTotal() int32 {
	if o == nil || isNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssignedUser200Response) GetTotalOk() (*int32, bool) {
	if o == nil || isNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetAssignedUser200Response) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetAssignedUser200Response) SetTotal(v int32) {
	o.Total = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *GetAssignedUser200Response) GetUsers() []int32 {
	if o == nil || isNil(o.Users) {
		var ret []int32
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAssignedUser200Response) GetUsersOk() ([]int32, bool) {
	if o == nil || isNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *GetAssignedUser200Response) HasUsers() bool {
	if o != nil && !isNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []int32 and assigns it to the Users field.
func (o *GetAssignedUser200Response) SetUsers(v []int32) {
	o.Users = v
}

// GetBeforeCursor returns the BeforeCursor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAssignedUser200Response) GetBeforeCursor() int32 {
	if o == nil || isNil(o.BeforeCursor.Get()) {
		var ret int32
		return ret
	}
	return *o.BeforeCursor.Get()
}

// GetBeforeCursorOk returns a tuple with the BeforeCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAssignedUser200Response) GetBeforeCursorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.BeforeCursor.Get(), o.BeforeCursor.IsSet()
}

// HasBeforeCursor returns a boolean if a field has been set.
func (o *GetAssignedUser200Response) HasBeforeCursor() bool {
	if o != nil && o.BeforeCursor.IsSet() {
		return true
	}

	return false
}

// SetBeforeCursor gets a reference to the given NullableInt32 and assigns it to the BeforeCursor field.
func (o *GetAssignedUser200Response) SetBeforeCursor(v int32) {
	o.BeforeCursor.Set(&v)
}
// SetBeforeCursorNil sets the value for BeforeCursor to be an explicit nil
func (o *GetAssignedUser200Response) SetBeforeCursorNil() {
	o.BeforeCursor.Set(nil)
}

// UnsetBeforeCursor ensures that no value is present for BeforeCursor, not even an explicit nil
func (o *GetAssignedUser200Response) UnsetBeforeCursor() {
	o.BeforeCursor.Unset()
}

// GetPreviousLink returns the PreviousLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAssignedUser200Response) GetPreviousLink() string {
	if o == nil || isNil(o.PreviousLink.Get()) {
		var ret string
		return ret
	}
	return *o.PreviousLink.Get()
}

// GetPreviousLinkOk returns a tuple with the PreviousLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAssignedUser200Response) GetPreviousLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreviousLink.Get(), o.PreviousLink.IsSet()
}

// HasPreviousLink returns a boolean if a field has been set.
func (o *GetAssignedUser200Response) HasPreviousLink() bool {
	if o != nil && o.PreviousLink.IsSet() {
		return true
	}

	return false
}

// SetPreviousLink gets a reference to the given NullableString and assigns it to the PreviousLink field.
func (o *GetAssignedUser200Response) SetPreviousLink(v string) {
	o.PreviousLink.Set(&v)
}
// SetPreviousLinkNil sets the value for PreviousLink to be an explicit nil
func (o *GetAssignedUser200Response) SetPreviousLinkNil() {
	o.PreviousLink.Set(nil)
}

// UnsetPreviousLink ensures that no value is present for PreviousLink, not even an explicit nil
func (o *GetAssignedUser200Response) UnsetPreviousLink() {
	o.PreviousLink.Unset()
}

// GetAfterCursor returns the AfterCursor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAssignedUser200Response) GetAfterCursor() int32 {
	if o == nil || isNil(o.AfterCursor.Get()) {
		var ret int32
		return ret
	}
	return *o.AfterCursor.Get()
}

// GetAfterCursorOk returns a tuple with the AfterCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAssignedUser200Response) GetAfterCursorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AfterCursor.Get(), o.AfterCursor.IsSet()
}

// HasAfterCursor returns a boolean if a field has been set.
func (o *GetAssignedUser200Response) HasAfterCursor() bool {
	if o != nil && o.AfterCursor.IsSet() {
		return true
	}

	return false
}

// SetAfterCursor gets a reference to the given NullableInt32 and assigns it to the AfterCursor field.
func (o *GetAssignedUser200Response) SetAfterCursor(v int32) {
	o.AfterCursor.Set(&v)
}
// SetAfterCursorNil sets the value for AfterCursor to be an explicit nil
func (o *GetAssignedUser200Response) SetAfterCursorNil() {
	o.AfterCursor.Set(nil)
}

// UnsetAfterCursor ensures that no value is present for AfterCursor, not even an explicit nil
func (o *GetAssignedUser200Response) UnsetAfterCursor() {
	o.AfterCursor.Unset()
}

// GetNextLink returns the NextLink field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetAssignedUser200Response) GetNextLink() string {
	if o == nil || isNil(o.NextLink.Get()) {
		var ret string
		return ret
	}
	return *o.NextLink.Get()
}

// GetNextLinkOk returns a tuple with the NextLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetAssignedUser200Response) GetNextLinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextLink.Get(), o.NextLink.IsSet()
}

// HasNextLink returns a boolean if a field has been set.
func (o *GetAssignedUser200Response) HasNextLink() bool {
	if o != nil && o.NextLink.IsSet() {
		return true
	}

	return false
}

// SetNextLink gets a reference to the given NullableString and assigns it to the NextLink field.
func (o *GetAssignedUser200Response) SetNextLink(v string) {
	o.NextLink.Set(&v)
}
// SetNextLinkNil sets the value for NextLink to be an explicit nil
func (o *GetAssignedUser200Response) SetNextLinkNil() {
	o.NextLink.Set(nil)
}

// UnsetNextLink ensures that no value is present for NextLink, not even an explicit nil
func (o *GetAssignedUser200Response) UnsetNextLink() {
	o.NextLink.Unset()
}

func (o GetAssignedUser200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAssignedUser200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	if o.BeforeCursor.IsSet() {
		toSerialize["beforeCursor"] = o.BeforeCursor.Get()
	}
	if o.PreviousLink.IsSet() {
		toSerialize["previousLink"] = o.PreviousLink.Get()
	}
	if o.AfterCursor.IsSet() {
		toSerialize["afterCursor"] = o.AfterCursor.Get()
	}
	if o.NextLink.IsSet() {
		toSerialize["nextLink"] = o.NextLink.Get()
	}
	return toSerialize, nil
}

type NullableGetAssignedUser200Response struct {
	value *GetAssignedUser200Response
	isSet bool
}

func (v NullableGetAssignedUser200Response) Get() *GetAssignedUser200Response {
	return v.value
}

func (v *NullableGetAssignedUser200Response) Set(val *GetAssignedUser200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAssignedUser200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAssignedUser200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAssignedUser200Response(val *GetAssignedUser200Response) *NullableGetAssignedUser200Response {
	return &NullableGetAssignedUser200Response{value: val, isSet: true}
}

func (v NullableGetAssignedUser200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAssignedUser200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


