/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetEmailSettings200ResponseOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEmailSettings200ResponseOneOf{}

// GetEmailSettings200ResponseOneOf struct for GetEmailSettings200ResponseOneOf
type GetEmailSettings200ResponseOneOf struct {
	Mode *string `json:"mode,omitempty"`
}

// NewGetEmailSettings200ResponseOneOf instantiates a new GetEmailSettings200ResponseOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEmailSettings200ResponseOneOf() *GetEmailSettings200ResponseOneOf {
	this := GetEmailSettings200ResponseOneOf{}
	return &this
}

// NewGetEmailSettings200ResponseOneOfWithDefaults instantiates a new GetEmailSettings200ResponseOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEmailSettings200ResponseOneOfWithDefaults() *GetEmailSettings200ResponseOneOf {
	this := GetEmailSettings200ResponseOneOf{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *GetEmailSettings200ResponseOneOf) GetMode() string {
	if o == nil || isNil(o.Mode) {
		var ret string
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEmailSettings200ResponseOneOf) GetModeOk() (*string, bool) {
	if o == nil || isNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *GetEmailSettings200ResponseOneOf) HasMode() bool {
	if o != nil && !isNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given string and assigns it to the Mode field.
func (o *GetEmailSettings200ResponseOneOf) SetMode(v string) {
	o.Mode = &v
}

func (o GetEmailSettings200ResponseOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEmailSettings200ResponseOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Mode) {
		toSerialize["mode"] = o.Mode
	}
	return toSerialize, nil
}

type NullableGetEmailSettings200ResponseOneOf struct {
	value *GetEmailSettings200ResponseOneOf
	isSet bool
}

func (v NullableGetEmailSettings200ResponseOneOf) Get() *GetEmailSettings200ResponseOneOf {
	return v.value
}

func (v *NullableGetEmailSettings200ResponseOneOf) Set(val *GetEmailSettings200ResponseOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEmailSettings200ResponseOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEmailSettings200ResponseOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEmailSettings200ResponseOneOf(val *GetEmailSettings200ResponseOneOf) *NullableGetEmailSettings200ResponseOneOf {
	return &NullableGetEmailSettings200ResponseOneOf{value: val, isSet: true}
}

func (v NullableGetEmailSettings200ResponseOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEmailSettings200ResponseOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


