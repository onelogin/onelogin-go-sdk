/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetEnrolledFactors200ResponseDataOtpDevicesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEnrolledFactors200ResponseDataOtpDevicesInner{}

// GetEnrolledFactors200ResponseDataOtpDevicesInner struct for GetEnrolledFactors200ResponseDataOtpDevicesInner
type GetEnrolledFactors200ResponseDataOtpDevicesInner struct {
	// True = enabled (used successfully for authentication at least once). False = pending (registered but never used).
	Active *bool `json:"active,omitempty"`
	// True = is userâ€™s default MFA device for OneLogin.
	Default *bool `json:"default,omitempty"`
	// A short lived token that is required to Verify the Factor. This token expires in 120 seconds.
	StateToken *string `json:"state_token,omitempty"`
	// \"Official\" authentication factor name, as it appears to administrators in OneLogin.
	AuthFactorName *string `json:"auth_factor_name,omitempty"`
	// For OTP codes sent via SMS, the phone number receiving the SMS message.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// Authentication factor display name as it appears to users upon initial registration, as defined by admins at Settings > Authentication Factors.
	TypeDisplayName *string `json:"type_display_name,omitempty"`
	// true: You MUST Activate this Factor to trigger an SMS or Push notification before Verifying the OTP code. false: No Activation required. You can Verify the OTP immediately. MFA factors that provide both push notifications (user accepts notification) and pull code submission (user initiates code submission from device or enters it manually) should appear twice; once with needs_trigger: true and once with needs_trigger: false.
	NeedsTrigger *bool `json:"needs_trigger,omitempty"`
	// Authentication factor display name assigned by users when they enroll the device.
	UserDisplayName *string `json:"user_display_name,omitempty"`
	// MFA device identifier.
	Id *int32 `json:"id,omitempty"`
}

// NewGetEnrolledFactors200ResponseDataOtpDevicesInner instantiates a new GetEnrolledFactors200ResponseDataOtpDevicesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEnrolledFactors200ResponseDataOtpDevicesInner() *GetEnrolledFactors200ResponseDataOtpDevicesInner {
	this := GetEnrolledFactors200ResponseDataOtpDevicesInner{}
	return &this
}

// NewGetEnrolledFactors200ResponseDataOtpDevicesInnerWithDefaults instantiates a new GetEnrolledFactors200ResponseDataOtpDevicesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEnrolledFactors200ResponseDataOtpDevicesInnerWithDefaults() *GetEnrolledFactors200ResponseDataOtpDevicesInner {
	this := GetEnrolledFactors200ResponseDataOtpDevicesInner{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetActive() bool {
	if o == nil || isNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetActiveOk() (*bool, bool) {
	if o == nil || isNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasActive() bool {
	if o != nil && !isNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetActive(v bool) {
	o.Active = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetDefault() bool {
	if o == nil || isNil(o.Default) {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetDefaultOk() (*bool, bool) {
	if o == nil || isNil(o.Default) {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasDefault() bool {
	if o != nil && !isNil(o.Default) {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetDefault(v bool) {
	o.Default = &v
}

// GetStateToken returns the StateToken field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetStateToken() string {
	if o == nil || isNil(o.StateToken) {
		var ret string
		return ret
	}
	return *o.StateToken
}

// GetStateTokenOk returns a tuple with the StateToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetStateTokenOk() (*string, bool) {
	if o == nil || isNil(o.StateToken) {
		return nil, false
	}
	return o.StateToken, true
}

// HasStateToken returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasStateToken() bool {
	if o != nil && !isNil(o.StateToken) {
		return true
	}

	return false
}

// SetStateToken gets a reference to the given string and assigns it to the StateToken field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetStateToken(v string) {
	o.StateToken = &v
}

// GetAuthFactorName returns the AuthFactorName field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetAuthFactorName() string {
	if o == nil || isNil(o.AuthFactorName) {
		var ret string
		return ret
	}
	return *o.AuthFactorName
}

// GetAuthFactorNameOk returns a tuple with the AuthFactorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetAuthFactorNameOk() (*string, bool) {
	if o == nil || isNil(o.AuthFactorName) {
		return nil, false
	}
	return o.AuthFactorName, true
}

// HasAuthFactorName returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasAuthFactorName() bool {
	if o != nil && !isNil(o.AuthFactorName) {
		return true
	}

	return false
}

// SetAuthFactorName gets a reference to the given string and assigns it to the AuthFactorName field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetAuthFactorName(v string) {
	o.AuthFactorName = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetPhoneNumber() string {
	if o == nil || isNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetPhoneNumberOk() (*string, bool) {
	if o == nil || isNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasPhoneNumber() bool {
	if o != nil && !isNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetTypeDisplayName returns the TypeDisplayName field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetTypeDisplayName() string {
	if o == nil || isNil(o.TypeDisplayName) {
		var ret string
		return ret
	}
	return *o.TypeDisplayName
}

// GetTypeDisplayNameOk returns a tuple with the TypeDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetTypeDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.TypeDisplayName) {
		return nil, false
	}
	return o.TypeDisplayName, true
}

// HasTypeDisplayName returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasTypeDisplayName() bool {
	if o != nil && !isNil(o.TypeDisplayName) {
		return true
	}

	return false
}

// SetTypeDisplayName gets a reference to the given string and assigns it to the TypeDisplayName field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetTypeDisplayName(v string) {
	o.TypeDisplayName = &v
}

// GetNeedsTrigger returns the NeedsTrigger field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetNeedsTrigger() bool {
	if o == nil || isNil(o.NeedsTrigger) {
		var ret bool
		return ret
	}
	return *o.NeedsTrigger
}

// GetNeedsTriggerOk returns a tuple with the NeedsTrigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetNeedsTriggerOk() (*bool, bool) {
	if o == nil || isNil(o.NeedsTrigger) {
		return nil, false
	}
	return o.NeedsTrigger, true
}

// HasNeedsTrigger returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasNeedsTrigger() bool {
	if o != nil && !isNil(o.NeedsTrigger) {
		return true
	}

	return false
}

// SetNeedsTrigger gets a reference to the given bool and assigns it to the NeedsTrigger field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetNeedsTrigger(v bool) {
	o.NeedsTrigger = &v
}

// GetUserDisplayName returns the UserDisplayName field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetUserDisplayName() string {
	if o == nil || isNil(o.UserDisplayName) {
		var ret string
		return ret
	}
	return *o.UserDisplayName
}

// GetUserDisplayNameOk returns a tuple with the UserDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetUserDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.UserDisplayName) {
		return nil, false
	}
	return o.UserDisplayName, true
}

// HasUserDisplayName returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasUserDisplayName() bool {
	if o != nil && !isNil(o.UserDisplayName) {
		return true
	}

	return false
}

// SetUserDisplayName gets a reference to the given string and assigns it to the UserDisplayName field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetUserDisplayName(v string) {
	o.UserDisplayName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetEnrolledFactors200ResponseDataOtpDevicesInner) SetId(v int32) {
	o.Id = &v
}

func (o GetEnrolledFactors200ResponseDataOtpDevicesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEnrolledFactors200ResponseDataOtpDevicesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !isNil(o.Default) {
		toSerialize["default"] = o.Default
	}
	if !isNil(o.StateToken) {
		toSerialize["state_token"] = o.StateToken
	}
	if !isNil(o.AuthFactorName) {
		toSerialize["auth_factor_name"] = o.AuthFactorName
	}
	if !isNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !isNil(o.TypeDisplayName) {
		toSerialize["type_display_name"] = o.TypeDisplayName
	}
	if !isNil(o.NeedsTrigger) {
		toSerialize["needs_trigger"] = o.NeedsTrigger
	}
	if !isNil(o.UserDisplayName) {
		toSerialize["user_display_name"] = o.UserDisplayName
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableGetEnrolledFactors200ResponseDataOtpDevicesInner struct {
	value *GetEnrolledFactors200ResponseDataOtpDevicesInner
	isSet bool
}

func (v NullableGetEnrolledFactors200ResponseDataOtpDevicesInner) Get() *GetEnrolledFactors200ResponseDataOtpDevicesInner {
	return v.value
}

func (v *NullableGetEnrolledFactors200ResponseDataOtpDevicesInner) Set(val *GetEnrolledFactors200ResponseDataOtpDevicesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEnrolledFactors200ResponseDataOtpDevicesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEnrolledFactors200ResponseDataOtpDevicesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEnrolledFactors200ResponseDataOtpDevicesInner(val *GetEnrolledFactors200ResponseDataOtpDevicesInner) *NullableGetEnrolledFactors200ResponseDataOtpDevicesInner {
	return &NullableGetEnrolledFactors200ResponseDataOtpDevicesInner{value: val, isSet: true}
}

func (v NullableGetEnrolledFactors200ResponseDataOtpDevicesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEnrolledFactors200ResponseDataOtpDevicesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


