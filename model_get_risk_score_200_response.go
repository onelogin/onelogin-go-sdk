/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetRiskScore200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRiskScore200Response{}

// GetRiskScore200Response struct for GetRiskScore200Response
type GetRiskScore200Response struct {
	// A risk score 0 is low risk and 100 is the highest risk level possible.
	Score *float32 `json:"score,omitempty"`
	// Triggers are indicators of some of the key items that influenced the risk score.
	Triggers []string `json:"triggers,omitempty"`
}

// NewGetRiskScore200Response instantiates a new GetRiskScore200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRiskScore200Response() *GetRiskScore200Response {
	this := GetRiskScore200Response{}
	return &this
}

// NewGetRiskScore200ResponseWithDefaults instantiates a new GetRiskScore200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRiskScore200ResponseWithDefaults() *GetRiskScore200Response {
	this := GetRiskScore200Response{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *GetRiskScore200Response) GetScore() float32 {
	if o == nil || isNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScore200Response) GetScoreOk() (*float32, bool) {
	if o == nil || isNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *GetRiskScore200Response) HasScore() bool {
	if o != nil && !isNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *GetRiskScore200Response) SetScore(v float32) {
	o.Score = &v
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *GetRiskScore200Response) GetTriggers() []string {
	if o == nil || isNil(o.Triggers) {
		var ret []string
		return ret
	}
	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScore200Response) GetTriggersOk() ([]string, bool) {
	if o == nil || isNil(o.Triggers) {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *GetRiskScore200Response) HasTriggers() bool {
	if o != nil && !isNil(o.Triggers) {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []string and assigns it to the Triggers field.
func (o *GetRiskScore200Response) SetTriggers(v []string) {
	o.Triggers = v
}

func (o GetRiskScore200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRiskScore200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !isNil(o.Triggers) {
		toSerialize["triggers"] = o.Triggers
	}
	return toSerialize, nil
}

type NullableGetRiskScore200Response struct {
	value *GetRiskScore200Response
	isSet bool
}

func (v NullableGetRiskScore200Response) Get() *GetRiskScore200Response {
	return v.value
}

func (v *NullableGetRiskScore200Response) Set(val *GetRiskScore200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRiskScore200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRiskScore200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRiskScore200Response(val *GetRiskScore200Response) *NullableGetRiskScore200Response {
	return &NullableGetRiskScore200Response{value: val, isSet: true}
}

func (v NullableGetRiskScore200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRiskScore200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


