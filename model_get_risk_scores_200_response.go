/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetRiskScores200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRiskScores200Response{}

// GetRiskScores200Response struct for GetRiskScores200Response
type GetRiskScores200Response struct {
	Scores *GetRiskScores200ResponseScores `json:"scores,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewGetRiskScores200Response instantiates a new GetRiskScores200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRiskScores200Response() *GetRiskScores200Response {
	this := GetRiskScores200Response{}
	return &this
}

// NewGetRiskScores200ResponseWithDefaults instantiates a new GetRiskScores200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRiskScores200ResponseWithDefaults() *GetRiskScores200Response {
	this := GetRiskScores200Response{}
	return &this
}

// GetScores returns the Scores field value if set, zero value otherwise.
func (o *GetRiskScores200Response) GetScores() GetRiskScores200ResponseScores {
	if o == nil || isNil(o.Scores) {
		var ret GetRiskScores200ResponseScores
		return ret
	}
	return *o.Scores
}

// GetScoresOk returns a tuple with the Scores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200Response) GetScoresOk() (*GetRiskScores200ResponseScores, bool) {
	if o == nil || isNil(o.Scores) {
		return nil, false
	}
	return o.Scores, true
}

// HasScores returns a boolean if a field has been set.
func (o *GetRiskScores200Response) HasScores() bool {
	if o != nil && !isNil(o.Scores) {
		return true
	}

	return false
}

// SetScores gets a reference to the given GetRiskScores200ResponseScores and assigns it to the Scores field.
func (o *GetRiskScores200Response) SetScores(v GetRiskScores200ResponseScores) {
	o.Scores = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetRiskScores200Response) GetTotal() int32 {
	if o == nil || isNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200Response) GetTotalOk() (*int32, bool) {
	if o == nil || isNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetRiskScores200Response) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetRiskScores200Response) SetTotal(v int32) {
	o.Total = &v
}

func (o GetRiskScores200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRiskScores200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Scores) {
		toSerialize["scores"] = o.Scores
	}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableGetRiskScores200Response struct {
	value *GetRiskScores200Response
	isSet bool
}

func (v NullableGetRiskScores200Response) Get() *GetRiskScores200Response {
	return v.value
}

func (v *NullableGetRiskScores200Response) Set(val *GetRiskScores200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRiskScores200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRiskScores200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRiskScores200Response(val *GetRiskScores200Response) *NullableGetRiskScores200Response {
	return &NullableGetRiskScores200Response{value: val, isSet: true}
}

func (v NullableGetRiskScores200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRiskScores200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


