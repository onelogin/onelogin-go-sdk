/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetRiskScores200ResponseScores type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRiskScores200ResponseScores{}

// GetRiskScores200ResponseScores struct for GetRiskScores200ResponseScores
type GetRiskScores200ResponseScores struct {
	Minimal *int32 `json:"minimal,omitempty"`
	Low *int32 `json:"low,omitempty"`
	Medium *int32 `json:"medium,omitempty"`
	High *int32 `json:"high,omitempty"`
	VeryHigh *int32 `json:"very_high,omitempty"`
}

// NewGetRiskScores200ResponseScores instantiates a new GetRiskScores200ResponseScores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRiskScores200ResponseScores() *GetRiskScores200ResponseScores {
	this := GetRiskScores200ResponseScores{}
	return &this
}

// NewGetRiskScores200ResponseScoresWithDefaults instantiates a new GetRiskScores200ResponseScores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRiskScores200ResponseScoresWithDefaults() *GetRiskScores200ResponseScores {
	this := GetRiskScores200ResponseScores{}
	return &this
}

// GetMinimal returns the Minimal field value if set, zero value otherwise.
func (o *GetRiskScores200ResponseScores) GetMinimal() int32 {
	if o == nil || isNil(o.Minimal) {
		var ret int32
		return ret
	}
	return *o.Minimal
}

// GetMinimalOk returns a tuple with the Minimal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200ResponseScores) GetMinimalOk() (*int32, bool) {
	if o == nil || isNil(o.Minimal) {
		return nil, false
	}
	return o.Minimal, true
}

// HasMinimal returns a boolean if a field has been set.
func (o *GetRiskScores200ResponseScores) HasMinimal() bool {
	if o != nil && !isNil(o.Minimal) {
		return true
	}

	return false
}

// SetMinimal gets a reference to the given int32 and assigns it to the Minimal field.
func (o *GetRiskScores200ResponseScores) SetMinimal(v int32) {
	o.Minimal = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *GetRiskScores200ResponseScores) GetLow() int32 {
	if o == nil || isNil(o.Low) {
		var ret int32
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200ResponseScores) GetLowOk() (*int32, bool) {
	if o == nil || isNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *GetRiskScores200ResponseScores) HasLow() bool {
	if o != nil && !isNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given int32 and assigns it to the Low field.
func (o *GetRiskScores200ResponseScores) SetLow(v int32) {
	o.Low = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *GetRiskScores200ResponseScores) GetMedium() int32 {
	if o == nil || isNil(o.Medium) {
		var ret int32
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200ResponseScores) GetMediumOk() (*int32, bool) {
	if o == nil || isNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *GetRiskScores200ResponseScores) HasMedium() bool {
	if o != nil && !isNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given int32 and assigns it to the Medium field.
func (o *GetRiskScores200ResponseScores) SetMedium(v int32) {
	o.Medium = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *GetRiskScores200ResponseScores) GetHigh() int32 {
	if o == nil || isNil(o.High) {
		var ret int32
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200ResponseScores) GetHighOk() (*int32, bool) {
	if o == nil || isNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *GetRiskScores200ResponseScores) HasHigh() bool {
	if o != nil && !isNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given int32 and assigns it to the High field.
func (o *GetRiskScores200ResponseScores) SetHigh(v int32) {
	o.High = &v
}

// GetVeryHigh returns the VeryHigh field value if set, zero value otherwise.
func (o *GetRiskScores200ResponseScores) GetVeryHigh() int32 {
	if o == nil || isNil(o.VeryHigh) {
		var ret int32
		return ret
	}
	return *o.VeryHigh
}

// GetVeryHighOk returns a tuple with the VeryHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRiskScores200ResponseScores) GetVeryHighOk() (*int32, bool) {
	if o == nil || isNil(o.VeryHigh) {
		return nil, false
	}
	return o.VeryHigh, true
}

// HasVeryHigh returns a boolean if a field has been set.
func (o *GetRiskScores200ResponseScores) HasVeryHigh() bool {
	if o != nil && !isNil(o.VeryHigh) {
		return true
	}

	return false
}

// SetVeryHigh gets a reference to the given int32 and assigns it to the VeryHigh field.
func (o *GetRiskScores200ResponseScores) SetVeryHigh(v int32) {
	o.VeryHigh = &v
}

func (o GetRiskScores200ResponseScores) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRiskScores200ResponseScores) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Minimal) {
		toSerialize["minimal"] = o.Minimal
	}
	if !isNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !isNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !isNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !isNil(o.VeryHigh) {
		toSerialize["very_high"] = o.VeryHigh
	}
	return toSerialize, nil
}

type NullableGetRiskScores200ResponseScores struct {
	value *GetRiskScores200ResponseScores
	isSet bool
}

func (v NullableGetRiskScores200ResponseScores) Get() *GetRiskScores200ResponseScores {
	return v.value
}

func (v *NullableGetRiskScores200ResponseScores) Set(val *GetRiskScores200ResponseScores) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRiskScores200ResponseScores) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRiskScores200ResponseScores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRiskScores200ResponseScores(val *GetRiskScores200ResponseScores) *NullableGetRiskScores200ResponseScores {
	return &NullableGetRiskScores200ResponseScores{value: val, isSet: true}
}

func (v NullableGetRiskScores200ResponseScores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRiskScores200ResponseScores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


