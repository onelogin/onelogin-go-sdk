/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the GetRoleApps200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRoleApps200ResponseInner{}

// GetRoleApps200ResponseInner struct for GetRoleApps200ResponseInner
type GetRoleApps200ResponseInner struct {
	// app id
	Id *int32 `json:"id,omitempty"`
	// app name
	Name *string `json:"name,omitempty"`
	// url of Icon
	IconUrl *string `json:"icon_url,omitempty"`
}

// NewGetRoleApps200ResponseInner instantiates a new GetRoleApps200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRoleApps200ResponseInner() *GetRoleApps200ResponseInner {
	this := GetRoleApps200ResponseInner{}
	return &this
}

// NewGetRoleApps200ResponseInnerWithDefaults instantiates a new GetRoleApps200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRoleApps200ResponseInnerWithDefaults() *GetRoleApps200ResponseInner {
	this := GetRoleApps200ResponseInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRoleApps200ResponseInner) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleApps200ResponseInner) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRoleApps200ResponseInner) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetRoleApps200ResponseInner) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRoleApps200ResponseInner) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleApps200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRoleApps200ResponseInner) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRoleApps200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetIconUrl returns the IconUrl field value if set, zero value otherwise.
func (o *GetRoleApps200ResponseInner) GetIconUrl() string {
	if o == nil || isNil(o.IconUrl) {
		var ret string
		return ret
	}
	return *o.IconUrl
}

// GetIconUrlOk returns a tuple with the IconUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRoleApps200ResponseInner) GetIconUrlOk() (*string, bool) {
	if o == nil || isNil(o.IconUrl) {
		return nil, false
	}
	return o.IconUrl, true
}

// HasIconUrl returns a boolean if a field has been set.
func (o *GetRoleApps200ResponseInner) HasIconUrl() bool {
	if o != nil && !isNil(o.IconUrl) {
		return true
	}

	return false
}

// SetIconUrl gets a reference to the given string and assigns it to the IconUrl field.
func (o *GetRoleApps200ResponseInner) SetIconUrl(v string) {
	o.IconUrl = &v
}

func (o GetRoleApps200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRoleApps200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.IconUrl) {
		toSerialize["icon_url"] = o.IconUrl
	}
	return toSerialize, nil
}

type NullableGetRoleApps200ResponseInner struct {
	value *GetRoleApps200ResponseInner
	isSet bool
}

func (v NullableGetRoleApps200ResponseInner) Get() *GetRoleApps200ResponseInner {
	return v.value
}

func (v *NullableGetRoleApps200ResponseInner) Set(val *GetRoleApps200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRoleApps200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRoleApps200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRoleApps200ResponseInner(val *GetRoleApps200ResponseInner) *NullableGetRoleApps200ResponseInner {
	return &NullableGetRoleApps200ResponseInner{value: val, isSet: true}
}

func (v NullableGetRoleApps200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRoleApps200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


