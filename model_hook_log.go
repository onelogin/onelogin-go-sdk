/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the HookLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HookLog{}

// HookLog struct for HookLog
type HookLog struct {
	RequestId *string `json:"request_id,omitempty"`
	CorrelationId *string `json:"correlation_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Events []string `json:"events,omitempty"`
}

// NewHookLog instantiates a new HookLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHookLog() *HookLog {
	this := HookLog{}
	return &this
}

// NewHookLogWithDefaults instantiates a new HookLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHookLogWithDefaults() *HookLog {
	this := HookLog{}
	return &this
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *HookLog) GetRequestId() string {
	if o == nil || isNil(o.RequestId) {
		var ret string
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookLog) GetRequestIdOk() (*string, bool) {
	if o == nil || isNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *HookLog) HasRequestId() bool {
	if o != nil && !isNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given string and assigns it to the RequestId field.
func (o *HookLog) SetRequestId(v string) {
	o.RequestId = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *HookLog) GetCorrelationId() string {
	if o == nil || isNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookLog) GetCorrelationIdOk() (*string, bool) {
	if o == nil || isNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *HookLog) HasCorrelationId() bool {
	if o != nil && !isNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *HookLog) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *HookLog) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookLog) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *HookLog) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *HookLog) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *HookLog) GetEvents() []string {
	if o == nil || isNil(o.Events) {
		var ret []string
		return ret
	}
	return o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookLog) GetEventsOk() ([]string, bool) {
	if o == nil || isNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *HookLog) HasEvents() bool {
	if o != nil && !isNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given []string and assigns it to the Events field.
func (o *HookLog) SetEvents(v []string) {
	o.Events = v
}

func (o HookLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HookLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RequestId) {
		toSerialize["request_id"] = o.RequestId
	}
	if !isNil(o.CorrelationId) {
		toSerialize["correlation_id"] = o.CorrelationId
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	return toSerialize, nil
}

type NullableHookLog struct {
	value *HookLog
	isSet bool
}

func (v NullableHookLog) Get() *HookLog {
	return v.value
}

func (v *NullableHookLog) Set(val *HookLog) {
	v.value = val
	v.isSet = true
}

func (v NullableHookLog) IsSet() bool {
	return v.isSet
}

func (v *NullableHookLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHookLog(val *HookLog) *NullableHookLog {
	return &NullableHookLog{value: val, isSet: true}
}

func (v NullableHookLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHookLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


