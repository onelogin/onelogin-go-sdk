/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the LockAccountUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LockAccountUserRequest{}

// LockAccountUserRequest struct for LockAccountUserRequest
type LockAccountUserRequest struct {
	// Set to the number of minutes for which you want to lock the user account. Set to 0 if you want to lock the user account based on the Lock effective period set in the policy assigned to the user. If no policy is assigned to the user, setting this value to 0 will lock the userâ€™s account until you unlock it Note that this value can not be less time that the Lock Effective Period specified on a user policy.
	LockedUntil int32 `json:"locked_until"`
}

// NewLockAccountUserRequest instantiates a new LockAccountUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLockAccountUserRequest(lockedUntil int32) *LockAccountUserRequest {
	this := LockAccountUserRequest{}
	this.LockedUntil = lockedUntil
	return &this
}

// NewLockAccountUserRequestWithDefaults instantiates a new LockAccountUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLockAccountUserRequestWithDefaults() *LockAccountUserRequest {
	this := LockAccountUserRequest{}
	return &this
}

// GetLockedUntil returns the LockedUntil field value
func (o *LockAccountUserRequest) GetLockedUntil() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LockedUntil
}

// GetLockedUntilOk returns a tuple with the LockedUntil field value
// and a boolean to check if the value has been set.
func (o *LockAccountUserRequest) GetLockedUntilOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockedUntil, true
}

// SetLockedUntil sets field value
func (o *LockAccountUserRequest) SetLockedUntil(v int32) {
	o.LockedUntil = v
}

func (o LockAccountUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LockAccountUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locked_until"] = o.LockedUntil
	return toSerialize, nil
}

type NullableLockAccountUserRequest struct {
	value *LockAccountUserRequest
	isSet bool
}

func (v NullableLockAccountUserRequest) Get() *LockAccountUserRequest {
	return v.value
}

func (v *NullableLockAccountUserRequest) Set(val *LockAccountUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableLockAccountUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableLockAccountUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLockAccountUserRequest(val *LockAccountUserRequest) *NullableLockAccountUserRequest {
	return &NullableLockAccountUserRequest{value: val, isSet: true}
}

func (v NullableLockAccountUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLockAccountUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


