/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the MessageTemplateTemplateOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageTemplateTemplateOneOf{}

// MessageTemplateTemplateOneOf struct for MessageTemplateTemplateOneOf
type MessageTemplateTemplateOneOf struct {
	// Custom Email Subject
	Subject string `json:"subject"`
	// The HTML body of the Custom Email
	Html string `json:"html"`
	// The Plain text body of the email
	Plain string `json:"plain"`
}

// NewMessageTemplateTemplateOneOf instantiates a new MessageTemplateTemplateOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageTemplateTemplateOneOf(subject string, html string, plain string) *MessageTemplateTemplateOneOf {
	this := MessageTemplateTemplateOneOf{}
	this.Subject = subject
	this.Html = html
	this.Plain = plain
	return &this
}

// NewMessageTemplateTemplateOneOfWithDefaults instantiates a new MessageTemplateTemplateOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageTemplateTemplateOneOfWithDefaults() *MessageTemplateTemplateOneOf {
	this := MessageTemplateTemplateOneOf{}
	return &this
}

// GetSubject returns the Subject field value
func (o *MessageTemplateTemplateOneOf) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *MessageTemplateTemplateOneOf) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *MessageTemplateTemplateOneOf) SetSubject(v string) {
	o.Subject = v
}

// GetHtml returns the Html field value
func (o *MessageTemplateTemplateOneOf) GetHtml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Html
}

// GetHtmlOk returns a tuple with the Html field value
// and a boolean to check if the value has been set.
func (o *MessageTemplateTemplateOneOf) GetHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Html, true
}

// SetHtml sets field value
func (o *MessageTemplateTemplateOneOf) SetHtml(v string) {
	o.Html = v
}

// GetPlain returns the Plain field value
func (o *MessageTemplateTemplateOneOf) GetPlain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Plain
}

// GetPlainOk returns a tuple with the Plain field value
// and a boolean to check if the value has been set.
func (o *MessageTemplateTemplateOneOf) GetPlainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plain, true
}

// SetPlain sets field value
func (o *MessageTemplateTemplateOneOf) SetPlain(v string) {
	o.Plain = v
}

func (o MessageTemplateTemplateOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageTemplateTemplateOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subject"] = o.Subject
	toSerialize["html"] = o.Html
	toSerialize["plain"] = o.Plain
	return toSerialize, nil
}

type NullableMessageTemplateTemplateOneOf struct {
	value *MessageTemplateTemplateOneOf
	isSet bool
}

func (v NullableMessageTemplateTemplateOneOf) Get() *MessageTemplateTemplateOneOf {
	return v.value
}

func (v *NullableMessageTemplateTemplateOneOf) Set(val *MessageTemplateTemplateOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageTemplateTemplateOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageTemplateTemplateOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageTemplateTemplateOneOf(val *MessageTemplateTemplateOneOf) *NullableMessageTemplateTemplateOneOf {
	return &NullableMessageTemplateTemplateOneOf{value: val, isSet: true}
}

func (v NullableMessageTemplateTemplateOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageTemplateTemplateOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


