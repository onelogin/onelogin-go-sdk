/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the RequestBrand type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RequestBrand{}

// RequestBrand struct for RequestBrand
type RequestBrand struct {
	// Indicates if the brand is enabled or not
	Enabled *bool `json:"enabled,omitempty"`
	// Brand’s name for humans. This isn’t related to subdomains.
	Name string `json:"name"`
	// Indicates if the custom support is enabled. If enabled, the login page includes the ability to submit a support request.
	CustomSupportEnabled *bool `json:"custom_support_enabled,omitempty"`
	// Primary brand color
	CustomColor *string `json:"custom_color,omitempty"`
	// Secondary brand color
	CustomAccentColor *string `json:"custom_accent_color,omitempty"`
	// Color for the masking layer above the background image of the branded login screen.
	CustomMaskingColor *string `json:"custom_masking_color,omitempty"`
	// Opacity for the custom_masking_color.
	CustomMaskingOpacity *int32 `json:"custom_masking_opacity,omitempty"`
	// Indicates if the custom Username/Email field label is enabled or not
	EnableCustomLabelForLoginScreen *bool `json:"enable_custom_label_for_login_screen,omitempty"`
	// Custom label for the Username/Email field on the login screen. See example here.
	CustomLabelTextForLoginScreen *string `json:"custom_label_text_for_login_screen,omitempty"`
	// Link text to show login instruction screen.
	LoginInstructionTitle *string `json:"login_instruction_title,omitempty"`
	// Text for the login instruction screen, styled in Markdown.
	LoginInstruction *string `json:"login_instruction,omitempty"`
	// Indicates if the OneLogin footer will appear at the bottom of the login page.
	HideOneloginFooter *bool `json:"hide_onelogin_footer,omitempty"`
	// Text that replaces the default text displayed on the initial screen of the MFA Registration.
	MfaEnrollmentMessage *string `json:"mfa_enrollment_message,omitempty"`
	// Base64 encoded image data (JPG/PNG, <5MB)
	Background *string `json:"background,omitempty"`
	// Base64 encoded image data (PNG, <1MB)
	Logo *string `json:"logo,omitempty"`
}

// NewRequestBrand instantiates a new RequestBrand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestBrand(name string) *RequestBrand {
	this := RequestBrand{}
	var enabled bool = false
	this.Enabled = &enabled
	this.Name = name
	return &this
}

// NewRequestBrandWithDefaults instantiates a new RequestBrand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestBrandWithDefaults() *RequestBrand {
	this := RequestBrand{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RequestBrand) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RequestBrand) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *RequestBrand) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetName returns the Name field value
func (o *RequestBrand) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RequestBrand) SetName(v string) {
	o.Name = v
}

// GetCustomSupportEnabled returns the CustomSupportEnabled field value if set, zero value otherwise.
func (o *RequestBrand) GetCustomSupportEnabled() bool {
	if o == nil || isNil(o.CustomSupportEnabled) {
		var ret bool
		return ret
	}
	return *o.CustomSupportEnabled
}

// GetCustomSupportEnabledOk returns a tuple with the CustomSupportEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetCustomSupportEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.CustomSupportEnabled) {
		return nil, false
	}
	return o.CustomSupportEnabled, true
}

// HasCustomSupportEnabled returns a boolean if a field has been set.
func (o *RequestBrand) HasCustomSupportEnabled() bool {
	if o != nil && !isNil(o.CustomSupportEnabled) {
		return true
	}

	return false
}

// SetCustomSupportEnabled gets a reference to the given bool and assigns it to the CustomSupportEnabled field.
func (o *RequestBrand) SetCustomSupportEnabled(v bool) {
	o.CustomSupportEnabled = &v
}

// GetCustomColor returns the CustomColor field value if set, zero value otherwise.
func (o *RequestBrand) GetCustomColor() string {
	if o == nil || isNil(o.CustomColor) {
		var ret string
		return ret
	}
	return *o.CustomColor
}

// GetCustomColorOk returns a tuple with the CustomColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetCustomColorOk() (*string, bool) {
	if o == nil || isNil(o.CustomColor) {
		return nil, false
	}
	return o.CustomColor, true
}

// HasCustomColor returns a boolean if a field has been set.
func (o *RequestBrand) HasCustomColor() bool {
	if o != nil && !isNil(o.CustomColor) {
		return true
	}

	return false
}

// SetCustomColor gets a reference to the given string and assigns it to the CustomColor field.
func (o *RequestBrand) SetCustomColor(v string) {
	o.CustomColor = &v
}

// GetCustomAccentColor returns the CustomAccentColor field value if set, zero value otherwise.
func (o *RequestBrand) GetCustomAccentColor() string {
	if o == nil || isNil(o.CustomAccentColor) {
		var ret string
		return ret
	}
	return *o.CustomAccentColor
}

// GetCustomAccentColorOk returns a tuple with the CustomAccentColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetCustomAccentColorOk() (*string, bool) {
	if o == nil || isNil(o.CustomAccentColor) {
		return nil, false
	}
	return o.CustomAccentColor, true
}

// HasCustomAccentColor returns a boolean if a field has been set.
func (o *RequestBrand) HasCustomAccentColor() bool {
	if o != nil && !isNil(o.CustomAccentColor) {
		return true
	}

	return false
}

// SetCustomAccentColor gets a reference to the given string and assigns it to the CustomAccentColor field.
func (o *RequestBrand) SetCustomAccentColor(v string) {
	o.CustomAccentColor = &v
}

// GetCustomMaskingColor returns the CustomMaskingColor field value if set, zero value otherwise.
func (o *RequestBrand) GetCustomMaskingColor() string {
	if o == nil || isNil(o.CustomMaskingColor) {
		var ret string
		return ret
	}
	return *o.CustomMaskingColor
}

// GetCustomMaskingColorOk returns a tuple with the CustomMaskingColor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetCustomMaskingColorOk() (*string, bool) {
	if o == nil || isNil(o.CustomMaskingColor) {
		return nil, false
	}
	return o.CustomMaskingColor, true
}

// HasCustomMaskingColor returns a boolean if a field has been set.
func (o *RequestBrand) HasCustomMaskingColor() bool {
	if o != nil && !isNil(o.CustomMaskingColor) {
		return true
	}

	return false
}

// SetCustomMaskingColor gets a reference to the given string and assigns it to the CustomMaskingColor field.
func (o *RequestBrand) SetCustomMaskingColor(v string) {
	o.CustomMaskingColor = &v
}

// GetCustomMaskingOpacity returns the CustomMaskingOpacity field value if set, zero value otherwise.
func (o *RequestBrand) GetCustomMaskingOpacity() int32 {
	if o == nil || isNil(o.CustomMaskingOpacity) {
		var ret int32
		return ret
	}
	return *o.CustomMaskingOpacity
}

// GetCustomMaskingOpacityOk returns a tuple with the CustomMaskingOpacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetCustomMaskingOpacityOk() (*int32, bool) {
	if o == nil || isNil(o.CustomMaskingOpacity) {
		return nil, false
	}
	return o.CustomMaskingOpacity, true
}

// HasCustomMaskingOpacity returns a boolean if a field has been set.
func (o *RequestBrand) HasCustomMaskingOpacity() bool {
	if o != nil && !isNil(o.CustomMaskingOpacity) {
		return true
	}

	return false
}

// SetCustomMaskingOpacity gets a reference to the given int32 and assigns it to the CustomMaskingOpacity field.
func (o *RequestBrand) SetCustomMaskingOpacity(v int32) {
	o.CustomMaskingOpacity = &v
}

// GetEnableCustomLabelForLoginScreen returns the EnableCustomLabelForLoginScreen field value if set, zero value otherwise.
func (o *RequestBrand) GetEnableCustomLabelForLoginScreen() bool {
	if o == nil || isNil(o.EnableCustomLabelForLoginScreen) {
		var ret bool
		return ret
	}
	return *o.EnableCustomLabelForLoginScreen
}

// GetEnableCustomLabelForLoginScreenOk returns a tuple with the EnableCustomLabelForLoginScreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetEnableCustomLabelForLoginScreenOk() (*bool, bool) {
	if o == nil || isNil(o.EnableCustomLabelForLoginScreen) {
		return nil, false
	}
	return o.EnableCustomLabelForLoginScreen, true
}

// HasEnableCustomLabelForLoginScreen returns a boolean if a field has been set.
func (o *RequestBrand) HasEnableCustomLabelForLoginScreen() bool {
	if o != nil && !isNil(o.EnableCustomLabelForLoginScreen) {
		return true
	}

	return false
}

// SetEnableCustomLabelForLoginScreen gets a reference to the given bool and assigns it to the EnableCustomLabelForLoginScreen field.
func (o *RequestBrand) SetEnableCustomLabelForLoginScreen(v bool) {
	o.EnableCustomLabelForLoginScreen = &v
}

// GetCustomLabelTextForLoginScreen returns the CustomLabelTextForLoginScreen field value if set, zero value otherwise.
func (o *RequestBrand) GetCustomLabelTextForLoginScreen() string {
	if o == nil || isNil(o.CustomLabelTextForLoginScreen) {
		var ret string
		return ret
	}
	return *o.CustomLabelTextForLoginScreen
}

// GetCustomLabelTextForLoginScreenOk returns a tuple with the CustomLabelTextForLoginScreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetCustomLabelTextForLoginScreenOk() (*string, bool) {
	if o == nil || isNil(o.CustomLabelTextForLoginScreen) {
		return nil, false
	}
	return o.CustomLabelTextForLoginScreen, true
}

// HasCustomLabelTextForLoginScreen returns a boolean if a field has been set.
func (o *RequestBrand) HasCustomLabelTextForLoginScreen() bool {
	if o != nil && !isNil(o.CustomLabelTextForLoginScreen) {
		return true
	}

	return false
}

// SetCustomLabelTextForLoginScreen gets a reference to the given string and assigns it to the CustomLabelTextForLoginScreen field.
func (o *RequestBrand) SetCustomLabelTextForLoginScreen(v string) {
	o.CustomLabelTextForLoginScreen = &v
}

// GetLoginInstructionTitle returns the LoginInstructionTitle field value if set, zero value otherwise.
func (o *RequestBrand) GetLoginInstructionTitle() string {
	if o == nil || isNil(o.LoginInstructionTitle) {
		var ret string
		return ret
	}
	return *o.LoginInstructionTitle
}

// GetLoginInstructionTitleOk returns a tuple with the LoginInstructionTitle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetLoginInstructionTitleOk() (*string, bool) {
	if o == nil || isNil(o.LoginInstructionTitle) {
		return nil, false
	}
	return o.LoginInstructionTitle, true
}

// HasLoginInstructionTitle returns a boolean if a field has been set.
func (o *RequestBrand) HasLoginInstructionTitle() bool {
	if o != nil && !isNil(o.LoginInstructionTitle) {
		return true
	}

	return false
}

// SetLoginInstructionTitle gets a reference to the given string and assigns it to the LoginInstructionTitle field.
func (o *RequestBrand) SetLoginInstructionTitle(v string) {
	o.LoginInstructionTitle = &v
}

// GetLoginInstruction returns the LoginInstruction field value if set, zero value otherwise.
func (o *RequestBrand) GetLoginInstruction() string {
	if o == nil || isNil(o.LoginInstruction) {
		var ret string
		return ret
	}
	return *o.LoginInstruction
}

// GetLoginInstructionOk returns a tuple with the LoginInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetLoginInstructionOk() (*string, bool) {
	if o == nil || isNil(o.LoginInstruction) {
		return nil, false
	}
	return o.LoginInstruction, true
}

// HasLoginInstruction returns a boolean if a field has been set.
func (o *RequestBrand) HasLoginInstruction() bool {
	if o != nil && !isNil(o.LoginInstruction) {
		return true
	}

	return false
}

// SetLoginInstruction gets a reference to the given string and assigns it to the LoginInstruction field.
func (o *RequestBrand) SetLoginInstruction(v string) {
	o.LoginInstruction = &v
}

// GetHideOneloginFooter returns the HideOneloginFooter field value if set, zero value otherwise.
func (o *RequestBrand) GetHideOneloginFooter() bool {
	if o == nil || isNil(o.HideOneloginFooter) {
		var ret bool
		return ret
	}
	return *o.HideOneloginFooter
}

// GetHideOneloginFooterOk returns a tuple with the HideOneloginFooter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetHideOneloginFooterOk() (*bool, bool) {
	if o == nil || isNil(o.HideOneloginFooter) {
		return nil, false
	}
	return o.HideOneloginFooter, true
}

// HasHideOneloginFooter returns a boolean if a field has been set.
func (o *RequestBrand) HasHideOneloginFooter() bool {
	if o != nil && !isNil(o.HideOneloginFooter) {
		return true
	}

	return false
}

// SetHideOneloginFooter gets a reference to the given bool and assigns it to the HideOneloginFooter field.
func (o *RequestBrand) SetHideOneloginFooter(v bool) {
	o.HideOneloginFooter = &v
}

// GetMfaEnrollmentMessage returns the MfaEnrollmentMessage field value if set, zero value otherwise.
func (o *RequestBrand) GetMfaEnrollmentMessage() string {
	if o == nil || isNil(o.MfaEnrollmentMessage) {
		var ret string
		return ret
	}
	return *o.MfaEnrollmentMessage
}

// GetMfaEnrollmentMessageOk returns a tuple with the MfaEnrollmentMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetMfaEnrollmentMessageOk() (*string, bool) {
	if o == nil || isNil(o.MfaEnrollmentMessage) {
		return nil, false
	}
	return o.MfaEnrollmentMessage, true
}

// HasMfaEnrollmentMessage returns a boolean if a field has been set.
func (o *RequestBrand) HasMfaEnrollmentMessage() bool {
	if o != nil && !isNil(o.MfaEnrollmentMessage) {
		return true
	}

	return false
}

// SetMfaEnrollmentMessage gets a reference to the given string and assigns it to the MfaEnrollmentMessage field.
func (o *RequestBrand) SetMfaEnrollmentMessage(v string) {
	o.MfaEnrollmentMessage = &v
}

// GetBackground returns the Background field value if set, zero value otherwise.
func (o *RequestBrand) GetBackground() string {
	if o == nil || isNil(o.Background) {
		var ret string
		return ret
	}
	return *o.Background
}

// GetBackgroundOk returns a tuple with the Background field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetBackgroundOk() (*string, bool) {
	if o == nil || isNil(o.Background) {
		return nil, false
	}
	return o.Background, true
}

// HasBackground returns a boolean if a field has been set.
func (o *RequestBrand) HasBackground() bool {
	if o != nil && !isNil(o.Background) {
		return true
	}

	return false
}

// SetBackground gets a reference to the given string and assigns it to the Background field.
func (o *RequestBrand) SetBackground(v string) {
	o.Background = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *RequestBrand) GetLogo() string {
	if o == nil || isNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestBrand) GetLogoOk() (*string, bool) {
	if o == nil || isNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *RequestBrand) HasLogo() bool {
	if o != nil && !isNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *RequestBrand) SetLogo(v string) {
	o.Logo = &v
}

func (o RequestBrand) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RequestBrand) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["name"] = o.Name
	if !isNil(o.CustomSupportEnabled) {
		toSerialize["custom_support_enabled"] = o.CustomSupportEnabled
	}
	if !isNil(o.CustomColor) {
		toSerialize["custom_color"] = o.CustomColor
	}
	if !isNil(o.CustomAccentColor) {
		toSerialize["custom_accent_color"] = o.CustomAccentColor
	}
	if !isNil(o.CustomMaskingColor) {
		toSerialize["custom_masking_color"] = o.CustomMaskingColor
	}
	if !isNil(o.CustomMaskingOpacity) {
		toSerialize["custom_masking_opacity"] = o.CustomMaskingOpacity
	}
	if !isNil(o.EnableCustomLabelForLoginScreen) {
		toSerialize["enable_custom_label_for_login_screen"] = o.EnableCustomLabelForLoginScreen
	}
	if !isNil(o.CustomLabelTextForLoginScreen) {
		toSerialize["custom_label_text_for_login_screen"] = o.CustomLabelTextForLoginScreen
	}
	if !isNil(o.LoginInstructionTitle) {
		toSerialize["login_instruction_title"] = o.LoginInstructionTitle
	}
	if !isNil(o.LoginInstruction) {
		toSerialize["login_instruction"] = o.LoginInstruction
	}
	if !isNil(o.HideOneloginFooter) {
		toSerialize["hide_onelogin_footer"] = o.HideOneloginFooter
	}
	if !isNil(o.MfaEnrollmentMessage) {
		toSerialize["mfa_enrollment_message"] = o.MfaEnrollmentMessage
	}
	if !isNil(o.Background) {
		toSerialize["background"] = o.Background
	}
	if !isNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	return toSerialize, nil
}

type NullableRequestBrand struct {
	value *RequestBrand
	isSet bool
}

func (v NullableRequestBrand) Get() *RequestBrand {
	return v.value
}

func (v *NullableRequestBrand) Set(val *RequestBrand) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestBrand) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestBrand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestBrand(val *RequestBrand) *NullableRequestBrand {
	return &NullableRequestBrand{value: val, isSet: true}
}

func (v NullableRequestBrand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestBrand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


