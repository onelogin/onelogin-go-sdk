/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the SamlAppAllOfParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SamlAppAllOfParameters{}

// SamlAppAllOfParameters struct for SamlAppAllOfParameters
type SamlAppAllOfParameters struct {
	SamlUsername SamlAppAllOfParametersSamlUsername `json:"saml_username"`
}

// NewSamlAppAllOfParameters instantiates a new SamlAppAllOfParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlAppAllOfParameters(samlUsername SamlAppAllOfParametersSamlUsername) *SamlAppAllOfParameters {
	this := SamlAppAllOfParameters{}
	this.SamlUsername = samlUsername
	return &this
}

// NewSamlAppAllOfParametersWithDefaults instantiates a new SamlAppAllOfParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlAppAllOfParametersWithDefaults() *SamlAppAllOfParameters {
	this := SamlAppAllOfParameters{}
	return &this
}

// GetSamlUsername returns the SamlUsername field value
func (o *SamlAppAllOfParameters) GetSamlUsername() SamlAppAllOfParametersSamlUsername {
	if o == nil {
		var ret SamlAppAllOfParametersSamlUsername
		return ret
	}

	return o.SamlUsername
}

// GetSamlUsernameOk returns a tuple with the SamlUsername field value
// and a boolean to check if the value has been set.
func (o *SamlAppAllOfParameters) GetSamlUsernameOk() (*SamlAppAllOfParametersSamlUsername, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SamlUsername, true
}

// SetSamlUsername sets field value
func (o *SamlAppAllOfParameters) SetSamlUsername(v SamlAppAllOfParametersSamlUsername) {
	o.SamlUsername = v
}

func (o SamlAppAllOfParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SamlAppAllOfParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["saml_username"] = o.SamlUsername
	return toSerialize, nil
}

type NullableSamlAppAllOfParameters struct {
	value *SamlAppAllOfParameters
	isSet bool
}

func (v NullableSamlAppAllOfParameters) Get() *SamlAppAllOfParameters {
	return v.value
}

func (v *NullableSamlAppAllOfParameters) Set(val *SamlAppAllOfParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlAppAllOfParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlAppAllOfParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlAppAllOfParameters(val *SamlAppAllOfParameters) *NullableSamlAppAllOfParameters {
	return &NullableSamlAppAllOfParameters{value: val, isSet: true}
}

func (v NullableSamlAppAllOfParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlAppAllOfParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


