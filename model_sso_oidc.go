/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the SsoOidc type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SsoOidc{}

// SsoOidc struct for SsoOidc
type SsoOidc struct {
	// OIDC: The OpenId Connect Client Id.  Note that client_secret is only returned after Creating an App
	ClientId *string `json:"client_id,omitempty"`
}

// NewSsoOidc instantiates a new SsoOidc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSsoOidc() *SsoOidc {
	this := SsoOidc{}
	return &this
}

// NewSsoOidcWithDefaults instantiates a new SsoOidc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSsoOidcWithDefaults() *SsoOidc {
	this := SsoOidc{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *SsoOidc) GetClientId() string {
	if o == nil || isNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SsoOidc) GetClientIdOk() (*string, bool) {
	if o == nil || isNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *SsoOidc) HasClientId() bool {
	if o != nil && !isNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *SsoOidc) SetClientId(v string) {
	o.ClientId = &v
}

func (o SsoOidc) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SsoOidc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	return toSerialize, nil
}

type NullableSsoOidc struct {
	value *SsoOidc
	isSet bool
}

func (v NullableSsoOidc) Get() *SsoOidc {
	return v.value
}

func (v *NullableSsoOidc) Set(val *SsoOidc) {
	v.value = val
	v.isSet = true
}

func (v NullableSsoOidc) IsSet() bool {
	return v.isSet
}

func (v *NullableSsoOidc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSsoOidc(val *SsoOidc) *NullableSsoOidc {
	return &NullableSsoOidc{value: val, isSet: true}
}

func (v NullableSsoOidc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSsoOidc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


