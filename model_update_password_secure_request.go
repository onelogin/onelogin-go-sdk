/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the UpdatePasswordSecureRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePasswordSecureRequest{}

// UpdatePasswordSecureRequest struct for UpdatePasswordSecureRequest
type UpdatePasswordSecureRequest struct {
	// Set to the password value using a SHA-256-encoded value. If you are including your own password_salt value in your request, prepend the salt value to the cleartext password value before SHA-256-encoding it. For example, if your salt value is hello and your cleartext password value is password, the value you need to SHA-256-encode is hellopassword. The resulting encoded value would be b1c788abac15390de987ad17b65ac73c9b475d428a51f245c645a442fddd078b. Note that the alpha characters in this has must all be lower case.
	Password string `json:"password"`
	// This value must match the password value.
	PasswordConfirmation string `json:"password_confirmation"`
	// Set to salt+sha256.
	PasswordAlgorithm string `json:"password_algorithm"`
	// Optional. If your password hash has been salted then you can provide the salt used in this param. This assumes that the salt was prepended to the password before doing the SHA256 hash. The API supports a salt value that is up to 40 characters long.
	PasswordSalt *string `json:"password_salt,omitempty"`
}

// NewUpdatePasswordSecureRequest instantiates a new UpdatePasswordSecureRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePasswordSecureRequest(password string, passwordConfirmation string, passwordAlgorithm string) *UpdatePasswordSecureRequest {
	this := UpdatePasswordSecureRequest{}
	this.Password = password
	this.PasswordConfirmation = passwordConfirmation
	this.PasswordAlgorithm = passwordAlgorithm
	return &this
}

// NewUpdatePasswordSecureRequestWithDefaults instantiates a new UpdatePasswordSecureRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePasswordSecureRequestWithDefaults() *UpdatePasswordSecureRequest {
	this := UpdatePasswordSecureRequest{}
	return &this
}

// GetPassword returns the Password field value
func (o *UpdatePasswordSecureRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordSecureRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UpdatePasswordSecureRequest) SetPassword(v string) {
	o.Password = v
}

// GetPasswordConfirmation returns the PasswordConfirmation field value
func (o *UpdatePasswordSecureRequest) GetPasswordConfirmation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordConfirmation
}

// GetPasswordConfirmationOk returns a tuple with the PasswordConfirmation field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordSecureRequest) GetPasswordConfirmationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordConfirmation, true
}

// SetPasswordConfirmation sets field value
func (o *UpdatePasswordSecureRequest) SetPasswordConfirmation(v string) {
	o.PasswordConfirmation = v
}

// GetPasswordAlgorithm returns the PasswordAlgorithm field value
func (o *UpdatePasswordSecureRequest) GetPasswordAlgorithm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordAlgorithm
}

// GetPasswordAlgorithmOk returns a tuple with the PasswordAlgorithm field value
// and a boolean to check if the value has been set.
func (o *UpdatePasswordSecureRequest) GetPasswordAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PasswordAlgorithm, true
}

// SetPasswordAlgorithm sets field value
func (o *UpdatePasswordSecureRequest) SetPasswordAlgorithm(v string) {
	o.PasswordAlgorithm = v
}

// GetPasswordSalt returns the PasswordSalt field value if set, zero value otherwise.
func (o *UpdatePasswordSecureRequest) GetPasswordSalt() string {
	if o == nil || isNil(o.PasswordSalt) {
		var ret string
		return ret
	}
	return *o.PasswordSalt
}

// GetPasswordSaltOk returns a tuple with the PasswordSalt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePasswordSecureRequest) GetPasswordSaltOk() (*string, bool) {
	if o == nil || isNil(o.PasswordSalt) {
		return nil, false
	}
	return o.PasswordSalt, true
}

// HasPasswordSalt returns a boolean if a field has been set.
func (o *UpdatePasswordSecureRequest) HasPasswordSalt() bool {
	if o != nil && !isNil(o.PasswordSalt) {
		return true
	}

	return false
}

// SetPasswordSalt gets a reference to the given string and assigns it to the PasswordSalt field.
func (o *UpdatePasswordSecureRequest) SetPasswordSalt(v string) {
	o.PasswordSalt = &v
}

func (o UpdatePasswordSecureRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePasswordSecureRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["password"] = o.Password
	toSerialize["password_confirmation"] = o.PasswordConfirmation
	toSerialize["password_algorithm"] = o.PasswordAlgorithm
	if !isNil(o.PasswordSalt) {
		toSerialize["password_salt"] = o.PasswordSalt
	}
	return toSerialize, nil
}

type NullableUpdatePasswordSecureRequest struct {
	value *UpdatePasswordSecureRequest
	isSet bool
}

func (v NullableUpdatePasswordSecureRequest) Get() *UpdatePasswordSecureRequest {
	return v.value
}

func (v *NullableUpdatePasswordSecureRequest) Set(val *UpdatePasswordSecureRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePasswordSecureRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePasswordSecureRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePasswordSecureRequest(val *UpdatePasswordSecureRequest) *NullableUpdatePasswordSecureRequest {
	return &NullableUpdatePasswordSecureRequest{value: val, isSet: true}
}

func (v NullableUpdatePasswordSecureRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePasswordSecureRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


