/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the VerFactorSaml200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerFactorSaml200Response{}

// VerFactorSaml200Response struct for VerFactorSaml200Response
type VerFactorSaml200Response struct {
	// Provides the SAML assertion.
	Data *string `json:"data,omitempty"`
	// Plain text description describing the outcome of the response.
	Message *string `json:"message,omitempty"`
}

// NewVerFactorSaml200Response instantiates a new VerFactorSaml200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerFactorSaml200Response() *VerFactorSaml200Response {
	this := VerFactorSaml200Response{}
	return &this
}

// NewVerFactorSaml200ResponseWithDefaults instantiates a new VerFactorSaml200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerFactorSaml200ResponseWithDefaults() *VerFactorSaml200Response {
	this := VerFactorSaml200Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *VerFactorSaml200Response) GetData() string {
	if o == nil || isNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerFactorSaml200Response) GetDataOk() (*string, bool) {
	if o == nil || isNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *VerFactorSaml200Response) HasData() bool {
	if o != nil && !isNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *VerFactorSaml200Response) SetData(v string) {
	o.Data = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *VerFactorSaml200Response) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerFactorSaml200Response) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *VerFactorSaml200Response) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *VerFactorSaml200Response) SetMessage(v string) {
	o.Message = &v
}

func (o VerFactorSaml200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerFactorSaml200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !isNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableVerFactorSaml200Response struct {
	value *VerFactorSaml200Response
	isSet bool
}

func (v NullableVerFactorSaml200Response) Get() *VerFactorSaml200Response {
	return v.value
}

func (v *NullableVerFactorSaml200Response) Set(val *VerFactorSaml200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableVerFactorSaml200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableVerFactorSaml200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerFactorSaml200Response(val *VerFactorSaml200Response) *NullableVerFactorSaml200Response {
	return &NullableVerFactorSaml200Response{value: val, isSet: true}
}

func (v NullableVerFactorSaml200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerFactorSaml200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


