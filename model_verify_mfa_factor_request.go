/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the VerifyMfaFactorRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyMfaFactorRequest{}

// VerifyMfaFactorRequest struct for VerifyMfaFactorRequest
type VerifyMfaFactorRequest struct {
	// The state_token is returned after a successful request to Enroll a Factor or Activate a Factor. The state_token MUST be provided if the needs_trigger attribute from the proceeding calls is set to true. Note that the state_token expires 120 seconds after creation. If the token is expired you will need to Activate the Factor again.
	StateToken *string `json:"state_token,omitempty"`
	// OTP code provided by the device or SMS message sent to user. When a device like OneLogin Protect that supports Push has been used you do not need to provide the otp_token and can keep polling this endpoint until the state_token expires.
	OtpToken *string `json:"otp_token,omitempty"`
}

// NewVerifyMfaFactorRequest instantiates a new VerifyMfaFactorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyMfaFactorRequest() *VerifyMfaFactorRequest {
	this := VerifyMfaFactorRequest{}
	return &this
}

// NewVerifyMfaFactorRequestWithDefaults instantiates a new VerifyMfaFactorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyMfaFactorRequestWithDefaults() *VerifyMfaFactorRequest {
	this := VerifyMfaFactorRequest{}
	return &this
}

// GetStateToken returns the StateToken field value if set, zero value otherwise.
func (o *VerifyMfaFactorRequest) GetStateToken() string {
	if o == nil || isNil(o.StateToken) {
		var ret string
		return ret
	}
	return *o.StateToken
}

// GetStateTokenOk returns a tuple with the StateToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyMfaFactorRequest) GetStateTokenOk() (*string, bool) {
	if o == nil || isNil(o.StateToken) {
		return nil, false
	}
	return o.StateToken, true
}

// HasStateToken returns a boolean if a field has been set.
func (o *VerifyMfaFactorRequest) HasStateToken() bool {
	if o != nil && !isNil(o.StateToken) {
		return true
	}

	return false
}

// SetStateToken gets a reference to the given string and assigns it to the StateToken field.
func (o *VerifyMfaFactorRequest) SetStateToken(v string) {
	o.StateToken = &v
}

// GetOtpToken returns the OtpToken field value if set, zero value otherwise.
func (o *VerifyMfaFactorRequest) GetOtpToken() string {
	if o == nil || isNil(o.OtpToken) {
		var ret string
		return ret
	}
	return *o.OtpToken
}

// GetOtpTokenOk returns a tuple with the OtpToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyMfaFactorRequest) GetOtpTokenOk() (*string, bool) {
	if o == nil || isNil(o.OtpToken) {
		return nil, false
	}
	return o.OtpToken, true
}

// HasOtpToken returns a boolean if a field has been set.
func (o *VerifyMfaFactorRequest) HasOtpToken() bool {
	if o != nil && !isNil(o.OtpToken) {
		return true
	}

	return false
}

// SetOtpToken gets a reference to the given string and assigns it to the OtpToken field.
func (o *VerifyMfaFactorRequest) SetOtpToken(v string) {
	o.OtpToken = &v
}

func (o VerifyMfaFactorRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyMfaFactorRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StateToken) {
		toSerialize["state_token"] = o.StateToken
	}
	if !isNil(o.OtpToken) {
		toSerialize["otp_token"] = o.OtpToken
	}
	return toSerialize, nil
}

type NullableVerifyMfaFactorRequest struct {
	value *VerifyMfaFactorRequest
	isSet bool
}

func (v NullableVerifyMfaFactorRequest) Get() *VerifyMfaFactorRequest {
	return v.value
}

func (v *NullableVerifyMfaFactorRequest) Set(val *VerifyMfaFactorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyMfaFactorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyMfaFactorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyMfaFactorRequest(val *VerifyMfaFactorRequest) *NullableVerifyMfaFactorRequest {
	return &NullableVerifyMfaFactorRequest{value: val, isSet: true}
}

func (v NullableVerifyMfaFactorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyMfaFactorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


