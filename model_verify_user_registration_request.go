/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the VerifyUserRegistrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyUserRegistrationRequest{}

// VerifyUserRegistrationRequest struct for VerifyUserRegistrationRequest
type VerifyUserRegistrationRequest struct {
	// One-Time-Password (OTP) that was sent to the user based on the chosen factor. OneLogin SMS and OneLogin Email support this OTP code.
	Otp *int32 `json:"otp,omitempty"`
}

// NewVerifyUserRegistrationRequest instantiates a new VerifyUserRegistrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyUserRegistrationRequest() *VerifyUserRegistrationRequest {
	this := VerifyUserRegistrationRequest{}
	return &this
}

// NewVerifyUserRegistrationRequestWithDefaults instantiates a new VerifyUserRegistrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyUserRegistrationRequestWithDefaults() *VerifyUserRegistrationRequest {
	this := VerifyUserRegistrationRequest{}
	return &this
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *VerifyUserRegistrationRequest) GetOtp() int32 {
	if o == nil || isNil(o.Otp) {
		var ret int32
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserRegistrationRequest) GetOtpOk() (*int32, bool) {
	if o == nil || isNil(o.Otp) {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *VerifyUserRegistrationRequest) HasOtp() bool {
	if o != nil && !isNil(o.Otp) {
		return true
	}

	return false
}

// SetOtp gets a reference to the given int32 and assigns it to the Otp field.
func (o *VerifyUserRegistrationRequest) SetOtp(v int32) {
	o.Otp = &v
}

func (o VerifyUserRegistrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyUserRegistrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Otp) {
		toSerialize["otp"] = o.Otp
	}
	return toSerialize, nil
}

type NullableVerifyUserRegistrationRequest struct {
	value *VerifyUserRegistrationRequest
	isSet bool
}

func (v NullableVerifyUserRegistrationRequest) Get() *VerifyUserRegistrationRequest {
	return v.value
}

func (v *NullableVerifyUserRegistrationRequest) Set(val *VerifyUserRegistrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyUserRegistrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyUserRegistrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyUserRegistrationRequest(val *VerifyUserRegistrationRequest) *NullableVerifyUserRegistrationRequest {
	return &NullableVerifyUserRegistrationRequest{value: val, isSet: true}
}

func (v NullableVerifyUserRegistrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyUserRegistrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


