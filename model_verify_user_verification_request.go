/*
OneLogin API

OpenAPI Specification for OneLogin

API version: 3.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package onelogin

import (
	"encoding/json"
)

// checks if the VerifyUserVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyUserVerificationRequest{}

// VerifyUserVerificationRequest struct for VerifyUserVerificationRequest
type VerifyUserVerificationRequest struct {
	// OTP code provided by the device or SMS message sent to user.
	Otp *string `json:"otp,omitempty"`
	// ID of the specified device which has been registerd for the given user. Available on Get Devices API call.
	DeviceId *int32 `json:"device_id,omitempty"`
}

// NewVerifyUserVerificationRequest instantiates a new VerifyUserVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyUserVerificationRequest() *VerifyUserVerificationRequest {
	this := VerifyUserVerificationRequest{}
	return &this
}

// NewVerifyUserVerificationRequestWithDefaults instantiates a new VerifyUserVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyUserVerificationRequestWithDefaults() *VerifyUserVerificationRequest {
	this := VerifyUserVerificationRequest{}
	return &this
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *VerifyUserVerificationRequest) GetOtp() string {
	if o == nil || isNil(o.Otp) {
		var ret string
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserVerificationRequest) GetOtpOk() (*string, bool) {
	if o == nil || isNil(o.Otp) {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *VerifyUserVerificationRequest) HasOtp() bool {
	if o != nil && !isNil(o.Otp) {
		return true
	}

	return false
}

// SetOtp gets a reference to the given string and assigns it to the Otp field.
func (o *VerifyUserVerificationRequest) SetOtp(v string) {
	o.Otp = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *VerifyUserVerificationRequest) GetDeviceId() int32 {
	if o == nil || isNil(o.DeviceId) {
		var ret int32
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyUserVerificationRequest) GetDeviceIdOk() (*int32, bool) {
	if o == nil || isNil(o.DeviceId) {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *VerifyUserVerificationRequest) HasDeviceId() bool {
	if o != nil && !isNil(o.DeviceId) {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int32 and assigns it to the DeviceId field.
func (o *VerifyUserVerificationRequest) SetDeviceId(v int32) {
	o.DeviceId = &v
}

func (o VerifyUserVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyUserVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Otp) {
		toSerialize["otp"] = o.Otp
	}
	if !isNil(o.DeviceId) {
		toSerialize["device_id"] = o.DeviceId
	}
	return toSerialize, nil
}

type NullableVerifyUserVerificationRequest struct {
	value *VerifyUserVerificationRequest
	isSet bool
}

func (v NullableVerifyUserVerificationRequest) Get() *VerifyUserVerificationRequest {
	return v.value
}

func (v *NullableVerifyUserVerificationRequest) Set(val *VerifyUserVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyUserVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyUserVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyUserVerificationRequest(val *VerifyUserVerificationRequest) *NullableVerifyUserVerificationRequest {
	return &NullableVerifyUserVerificationRequest{value: val, isSet: true}
}

func (v NullableVerifyUserVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyUserVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


