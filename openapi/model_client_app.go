/*
OneLogin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ClientApp struct for ClientApp
type ClientApp struct {
	AppId *int32 `json:"app_id,omitempty"`
	ApiAuthId *int32 `json:"api_auth_id,omitempty"`
}

// NewClientApp instantiates a new ClientApp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientApp() *ClientApp {
	this := ClientApp{}
	return &this
}

// NewClientAppWithDefaults instantiates a new ClientApp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientAppWithDefaults() *ClientApp {
	this := ClientApp{}
	return &this
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ClientApp) GetAppId() int32 {
	if o == nil || o.AppId == nil {
		var ret int32
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetAppIdOk() (*int32, bool) {
	if o == nil || o.AppId == nil {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ClientApp) HasAppId() bool {
	if o != nil && o.AppId != nil {
		return true
	}

	return false
}

// SetAppId gets a reference to the given int32 and assigns it to the AppId field.
func (o *ClientApp) SetAppId(v int32) {
	o.AppId = &v
}

// GetApiAuthId returns the ApiAuthId field value if set, zero value otherwise.
func (o *ClientApp) GetApiAuthId() int32 {
	if o == nil || o.ApiAuthId == nil {
		var ret int32
		return ret
	}
	return *o.ApiAuthId
}

// GetApiAuthIdOk returns a tuple with the ApiAuthId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientApp) GetApiAuthIdOk() (*int32, bool) {
	if o == nil || o.ApiAuthId == nil {
		return nil, false
	}
	return o.ApiAuthId, true
}

// HasApiAuthId returns a boolean if a field has been set.
func (o *ClientApp) HasApiAuthId() bool {
	if o != nil && o.ApiAuthId != nil {
		return true
	}

	return false
}

// SetApiAuthId gets a reference to the given int32 and assigns it to the ApiAuthId field.
func (o *ClientApp) SetApiAuthId(v int32) {
	o.ApiAuthId = &v
}

func (o ClientApp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AppId != nil {
		toSerialize["app_id"] = o.AppId
	}
	if o.ApiAuthId != nil {
		toSerialize["api_auth_id"] = o.ApiAuthId
	}
	return json.Marshal(toSerialize)
}

type NullableClientApp struct {
	value *ClientApp
	isSet bool
}

func (v NullableClientApp) Get() *ClientApp {
	return v.value
}

func (v *NullableClientApp) Set(val *ClientApp) {
	v.value = val
	v.isSet = true
}

func (v NullableClientApp) IsSet() bool {
	return v.isSet
}

func (v *NullableClientApp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientApp(val *ClientApp) *NullableClientApp {
	return &NullableClientApp{value: val, isSet: true}
}

func (v NullableClientApp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientApp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


