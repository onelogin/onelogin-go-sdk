/*
OneLogin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GenerateSamlAssertionRequest struct for GenerateSamlAssertionRequest
type GenerateSamlAssertionRequest struct {
	// Set this to the username or email of the OneLogin user accessing the app for which you want to generate a SAML token.
	UsernameOrEmail string `json:"username_or_email"`
	// Password of the OneLogin user accessing the app for which you want to generate a SAML token.
	Password string `json:"password"`
	// App ID of the app for which you want to generate a SAML token. This is the app ID in OneLogin.
	AppId string `json:"app_id"`
	// Set to the subdomain of the OneLogin user accessing the app for which you want to generate a SAML token.
	Subdomain string `json:"subdomain"`
	// Whitelisted IP address, if MFA is required and you need to honor IP address whitelisting defined in MFA policies.
	IpAddress *string `json:"ip_address,omitempty"`
}

// NewGenerateSamlAssertionRequest instantiates a new GenerateSamlAssertionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateSamlAssertionRequest(usernameOrEmail string, password string, appId string, subdomain string) *GenerateSamlAssertionRequest {
	this := GenerateSamlAssertionRequest{}
	this.UsernameOrEmail = usernameOrEmail
	this.Password = password
	this.AppId = appId
	this.Subdomain = subdomain
	return &this
}

// NewGenerateSamlAssertionRequestWithDefaults instantiates a new GenerateSamlAssertionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateSamlAssertionRequestWithDefaults() *GenerateSamlAssertionRequest {
	this := GenerateSamlAssertionRequest{}
	return &this
}

// GetUsernameOrEmail returns the UsernameOrEmail field value
func (o *GenerateSamlAssertionRequest) GetUsernameOrEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UsernameOrEmail
}

// GetUsernameOrEmailOk returns a tuple with the UsernameOrEmail field value
// and a boolean to check if the value has been set.
func (o *GenerateSamlAssertionRequest) GetUsernameOrEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UsernameOrEmail, true
}

// SetUsernameOrEmail sets field value
func (o *GenerateSamlAssertionRequest) SetUsernameOrEmail(v string) {
	o.UsernameOrEmail = v
}

// GetPassword returns the Password field value
func (o *GenerateSamlAssertionRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *GenerateSamlAssertionRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *GenerateSamlAssertionRequest) SetPassword(v string) {
	o.Password = v
}

// GetAppId returns the AppId field value
func (o *GenerateSamlAssertionRequest) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *GenerateSamlAssertionRequest) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *GenerateSamlAssertionRequest) SetAppId(v string) {
	o.AppId = v
}

// GetSubdomain returns the Subdomain field value
func (o *GenerateSamlAssertionRequest) GetSubdomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value
// and a boolean to check if the value has been set.
func (o *GenerateSamlAssertionRequest) GetSubdomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subdomain, true
}

// SetSubdomain sets field value
func (o *GenerateSamlAssertionRequest) SetSubdomain(v string) {
	o.Subdomain = v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *GenerateSamlAssertionRequest) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateSamlAssertionRequest) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *GenerateSamlAssertionRequest) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *GenerateSamlAssertionRequest) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o GenerateSamlAssertionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username_or_email"] = o.UsernameOrEmail
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if true {
		toSerialize["subdomain"] = o.Subdomain
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableGenerateSamlAssertionRequest struct {
	value *GenerateSamlAssertionRequest
	isSet bool
}

func (v NullableGenerateSamlAssertionRequest) Get() *GenerateSamlAssertionRequest {
	return v.value
}

func (v *NullableGenerateSamlAssertionRequest) Set(val *GenerateSamlAssertionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateSamlAssertionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateSamlAssertionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateSamlAssertionRequest(val *GenerateSamlAssertionRequest) *NullableGenerateSamlAssertionRequest {
	return &NullableGenerateSamlAssertionRequest{value: val, isSet: true}
}

func (v NullableGenerateSamlAssertionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateSamlAssertionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


