/*
OneLogin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HookConditionsInner struct for HookConditionsInner
type HookConditionsInner struct {
	Source *string `json:"source,omitempty"`
	Operator *string `json:"operator,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewHookConditionsInner instantiates a new HookConditionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHookConditionsInner() *HookConditionsInner {
	this := HookConditionsInner{}
	return &this
}

// NewHookConditionsInnerWithDefaults instantiates a new HookConditionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHookConditionsInnerWithDefaults() *HookConditionsInner {
	this := HookConditionsInner{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *HookConditionsInner) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookConditionsInner) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *HookConditionsInner) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *HookConditionsInner) SetSource(v string) {
	o.Source = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *HookConditionsInner) GetOperator() string {
	if o == nil || o.Operator == nil {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookConditionsInner) GetOperatorOk() (*string, bool) {
	if o == nil || o.Operator == nil {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *HookConditionsInner) HasOperator() bool {
	if o != nil && o.Operator != nil {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *HookConditionsInner) SetOperator(v string) {
	o.Operator = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *HookConditionsInner) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HookConditionsInner) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *HookConditionsInner) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *HookConditionsInner) SetValue(v string) {
	o.Value = &v
}

func (o HookConditionsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.Operator != nil {
		toSerialize["operator"] = o.Operator
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableHookConditionsInner struct {
	value *HookConditionsInner
	isSet bool
}

func (v NullableHookConditionsInner) Get() *HookConditionsInner {
	return v.value
}

func (v *NullableHookConditionsInner) Set(val *HookConditionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableHookConditionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableHookConditionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHookConditionsInner(val *HookConditionsInner) *NullableHookConditionsInner {
	return &NullableHookConditionsInner{value: val, isSet: true}
}

func (v NullableHookConditionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHookConditionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


