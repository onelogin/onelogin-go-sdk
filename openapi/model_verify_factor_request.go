/*
OneLogin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VerifyFactorRequest struct for VerifyFactorRequest
type VerifyFactorRequest struct {
	// OTP code provided by the device or SMS message sent to user.
	Otp *string `json:"otp,omitempty"`
	// ID of the specified device which has been registerd for the given user.
	DeviceId *int32 `json:"device_id,omitempty"`
}

// NewVerifyFactorRequest instantiates a new VerifyFactorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyFactorRequest() *VerifyFactorRequest {
	this := VerifyFactorRequest{}
	return &this
}

// NewVerifyFactorRequestWithDefaults instantiates a new VerifyFactorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyFactorRequestWithDefaults() *VerifyFactorRequest {
	this := VerifyFactorRequest{}
	return &this
}

// GetOtp returns the Otp field value if set, zero value otherwise.
func (o *VerifyFactorRequest) GetOtp() string {
	if o == nil || o.Otp == nil {
		var ret string
		return ret
	}
	return *o.Otp
}

// GetOtpOk returns a tuple with the Otp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyFactorRequest) GetOtpOk() (*string, bool) {
	if o == nil || o.Otp == nil {
		return nil, false
	}
	return o.Otp, true
}

// HasOtp returns a boolean if a field has been set.
func (o *VerifyFactorRequest) HasOtp() bool {
	if o != nil && o.Otp != nil {
		return true
	}

	return false
}

// SetOtp gets a reference to the given string and assigns it to the Otp field.
func (o *VerifyFactorRequest) SetOtp(v string) {
	o.Otp = &v
}

// GetDeviceId returns the DeviceId field value if set, zero value otherwise.
func (o *VerifyFactorRequest) GetDeviceId() int32 {
	if o == nil || o.DeviceId == nil {
		var ret int32
		return ret
	}
	return *o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VerifyFactorRequest) GetDeviceIdOk() (*int32, bool) {
	if o == nil || o.DeviceId == nil {
		return nil, false
	}
	return o.DeviceId, true
}

// HasDeviceId returns a boolean if a field has been set.
func (o *VerifyFactorRequest) HasDeviceId() bool {
	if o != nil && o.DeviceId != nil {
		return true
	}

	return false
}

// SetDeviceId gets a reference to the given int32 and assigns it to the DeviceId field.
func (o *VerifyFactorRequest) SetDeviceId(v int32) {
	o.DeviceId = &v
}

func (o VerifyFactorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Otp != nil {
		toSerialize["otp"] = o.Otp
	}
	if o.DeviceId != nil {
		toSerialize["device_id"] = o.DeviceId
	}
	return json.Marshal(toSerialize)
}

type NullableVerifyFactorRequest struct {
	value *VerifyFactorRequest
	isSet bool
}

func (v NullableVerifyFactorRequest) Get() *VerifyFactorRequest {
	return v.value
}

func (v *NullableVerifyFactorRequest) Set(val *VerifyFactorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyFactorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyFactorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyFactorRequest(val *VerifyFactorRequest) *NullableVerifyFactorRequest {
	return &NullableVerifyFactorRequest{value: val, isSet: true}
}

func (v NullableVerifyFactorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyFactorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


